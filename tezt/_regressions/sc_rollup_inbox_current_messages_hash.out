sc_rollup_inbox_current_messages_hash.out

./tezos-client --wait none originate sc rollup from '[PUBLIC_KEY_HASH]' of kind arith booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 1600.648 units (will add 100 for safety)
Estimated storage: 6522 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000402
    Expected counter: 1
    Gas limit: 1701
    Storage limit: 6542 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000402
      payload fees(the block proposer) ....... +ꜩ0.000402
    Originate smart contract rollup of kind arith with boot sector ''
      This smart contract rollup origination was successfully applied
      Consumed gas: 1600.648
      Storage size: 6522 bytes
      Address: [SC_ROLLUP_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.6305
        storage fees ........................... +ꜩ1.6305


./tezos-client --wait none send sc rollup message 'text:["hello, message number 0", "hello, message number 1", "hello, message number 2", "hello, message number 3", "hello, message number 4"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1651.024 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00058
    Expected counter: 2
    Gas limit: 1752
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00058
      payload fees(the block proposer) ....... +ꜩ0.00058
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1651.152
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 3
         current messages hash  = CoWX5Ej2i6inrCyWYcbiwSyHu7PVyomazXcTYG41GwDoVvqJtmda
         nb_available_messages = 5
         message_counter = 5
         old_levels_messages = 
       content = CoUkdBQ53N7FWav8LuTvrcp3jyoxnpqk3xnEo3gSCgNwia4fq44j
       index = 1
       back_pointers = CoVawGHT9AxoKnd7hDBCii5PEcM2U3WbtL4L5HGD6PC9BWcLnzqD
    
    


./tezos-client --wait none send sc rollup message 'text:["hello, message number 5", "hello, message number 6", "hello, message number 7", "hello, message number 8", "hello, message number 9", "hello, message number 10"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1651.216 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000608
    Expected counter: 3
    Gas limit: 1752
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000608
      payload fees(the block proposer) ....... +ꜩ0.000608
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1651.344
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 4
         current messages hash  = CoVFYQa6ArFesQ42ivShv42ZGpbStrYmo8yi4wXNnXqXLd3yrfzy
         nb_available_messages = 11
         message_counter = 6
         old_levels_messages = 
       content = CoWX5Ej2i6inrCyWYcbiwSyHu7PVyomazXcTYG41GwDoVvqJtmda
       index = 2
       back_pointers = CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
      CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
    
    


./tezos-client --wait none send sc rollup message 'text:[]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1651.408 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000445
    Expected counter: 4
    Gas limit: 1752
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000445
      payload fees(the block proposer) ....... +ꜩ0.000445
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This operation sending a message to a smart contract rollup was successfully applied
      Consumed gas: 1651.408
      Resulting inbox state: 
         rollup = [SC_ROLLUP_HASH]
         level = 5
         current messages hash  = CoUkdBQ53N7FWav8LuTvrcp3jyoxnpqk3xnEo3gSCgNwia4fq44j
         nb_available_messages = 11
         message_counter = 0
         old_levels_messages = 
       content = CoVFYQa6ArFesQ42ivShv42ZGpbStrYmo8yi4wXNnXqXLd3yrfzy
       index = 3
       back_pointers = CoVFjqCQTXn2Paa8qshaSQjLN3ps7TJF2419fya4sK6UdveSwHTa
      CoUmDifn9cHq3g1wRc8ft64oMz7Jha8f4mcUWZd2YRseVae6MQAN
    
    

