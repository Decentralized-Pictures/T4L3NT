
./octez-client --protocol ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK --mode mockup --no-base-dir-warnings typecheck script michelson_test_scripts/mini_scenarios/send_tickets_in_big_map_015.tz --details
Well typed
Gas remaining: 1039967.113 units remaining
{ parameter address ;
  storage unit ;
  code { CAR
         /* [ address ] */ ;
         CONTRACT
           (big_map int (ticket string))
         /* [ option (contract (big_map int (ticket string))) ] */ ;
         IF_NONE
           { PUSH string "Contract of type `big_map(ticket(string))` not found"
             /* [ string ] */ ;
             FAILWITH
             /* [] */ }
           { EMPTY_BIG_MAP
               int
               (ticket string)
             /* [ big_map int (ticket string) : contract (big_map int (ticket string)) ] */ ;
             PUSH int
                  100
             /* [ int : big_map int (ticket string)
                : contract (big_map int (ticket string)) ] */ ;
             SWAP
             /* [ big_map int (ticket string) : int
                : contract (big_map int (ticket string)) ] */ ;
             PAIR
             /* [ pair (big_map int (ticket string)) int
                : contract (big_map int (ticket string)) ] */ ;
             LEFT (big_map int (ticket string))
             /* [ or (pair (big_map int (ticket string)) int) (big_map int (ticket string))
                : contract (big_map int (ticket string)) ] */ ;
             LOOP_LEFT
               { UNPAIR
                 /* [ big_map int (ticket string) : int
                    : contract (big_map int (ticket string)) ] */ ;
                 SWAP
                 /* [ int : big_map int (ticket string)
                    : contract (big_map int (ticket string)) ] */ ;
                 DUP
                 /* [ int : int : big_map int (ticket string)
                    : contract (big_map int (ticket string)) ] */ ;
                 DUG 2
                 /* [ int : big_map int (ticket string) : int
                    : contract (big_map int (ticket string)) ] */ ;
                 PUSH int
                      0
                 /* [ int : int : big_map int (ticket string) : int
                    : contract (big_map int (ticket string)) ] */ ;
                 COMPARE
                 /* [ int : big_map int (ticket string) : int
                    : contract (big_map int (ticket string)) ] */ ;
                 LT
                 /* [ bool : big_map int (ticket string) : int
                    : contract (big_map int (ticket string)) ] */ ;
                 IF { PUSH int
                           1
                      /* [ int : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      DUP 3
                      /* [ int : int : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      SUB
                      /* [ int : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      SWAP
                      /* [ big_map int (ticket string) : int : int
                         : contract (big_map int (ticket string)) ] */ ;
                      PUSH nat
                           1
                      /* [ nat : big_map int (ticket string) : int : int
                         : contract (big_map int (ticket string)) ] */ ;
                      PUSH string
                           "BLUE"
                      /* [ string : nat : big_map int (ticket string) : int : int
                         : contract (big_map int (ticket string)) ] */ ;
                      TICKET
                      /* [ option (ticket string) : big_map int (ticket string) : int : int
                         : contract (big_map int (ticket string)) ] */ ;
                      ASSERT_SOME ;
                      DIG 3
                      /* [ int : ticket string : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      SWAP
                      /* [ ticket string : int : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      SOME
                      /* [ option (ticket string) : int : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      SWAP
                      /* [ int : option (ticket string) : big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      UPDATE
                      /* [ big_map int (ticket string) : int
                         : contract (big_map int (ticket string)) ] */ ;
                      PAIR
                      /* [ pair (big_map int (ticket string)) int
                         : contract (big_map int (ticket string)) ] */ ;
                      LEFT (big_map int (ticket string))
                      /* [ or (pair (big_map int (ticket string)) int) (big_map int (ticket string))
                         : contract (big_map int (ticket string)) ] */ }
                    { SWAP
                      /* [ int : big_map int (ticket string)
                         : contract (big_map int (ticket string)) ] */ ;
                      DROP
                      /* [ big_map int (ticket string) : contract (big_map int (ticket string)) ] */ ;
                      RIGHT
                        (pair (big_map int (ticket string)) int)
                      /* [ or (pair (big_map int (ticket string)) int) (big_map int (ticket string))
                         : contract (big_map int (ticket string)) ] */ } }
             /* [ big_map int (ticket string) : contract (big_map int (ticket string)) ] */ ;
             SWAP
             /* [ contract (big_map int (ticket string)) : big_map int (ticket string) ] */ ;
             PUSH mutez
                  0
             /* [ mutez : contract (big_map int (ticket string))
                : big_map int (ticket string) ] */ ;
             DIG 2
             /* [ big_map int (ticket string) : mutez
                : contract (big_map int (ticket string)) ] */ ;
             TRANSFER_TOKENS
             /* [ operation ] */ ;
             PUSH unit Unit
             /* [ unit : operation ] */ ;
             NIL operation
             /* [ list operation : unit : operation ] */ ;
             DIG 2
             /* [ operation : list operation : unit ] */ ;
             CONS
             /* [ list operation : unit ] */ ;
             PAIR
             /* [ pair (list operation) unit ] */ } } }
