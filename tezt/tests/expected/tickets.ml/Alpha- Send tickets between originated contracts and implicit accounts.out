
./octez-client --mode mockup --wait none originate contract tickets_send transferring 0 from bootstrap1 running michelson_test_scripts/mini_scenarios/tickets_send_016.tz --init Unit --burn-cap 1
Node is bootstrapped.
Estimated gas: 1441.228 units (will add 100 for safety)
Estimated storage: 415 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00054
    Expected counter: 1
    Gas limit: 1542
    Storage limit: 435 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00054
      payload fees(the block proposer) ....... +ꜩ0.00054
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ0
      Script:
        { parameter (pair address nat) ;
          storage unit ;
          code { CAR ;
                 UNPAIR ;
                 CONTRACT (ticket string) ;
                 IF_NONE
                   { PUSH string "Contract not found" ; FAILWITH }
                   { PUSH mutez 0 ;
                     DIG 2 ;
                     PUSH string "Ticket" ;
                     TICKET ;
                     ASSERT_SOME ;
                     TRANSFER_TOKENS ;
                     PUSH unit Unit ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 158 bytes
        Paid storage size diff: 158 bytes
        Consumed gas: 1441.228
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.0395
          storage fees ........................... +ꜩ0.0395
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425

New contract [CONTRACT_HASH] originated.
Contract memorized as tickets_send.

./octez-client --mode mockup --wait none originate contract tickets_bag transferring 0 from bootstrap1 running michelson_test_scripts/mini_scenarios/tickets_bag_016.tz --init '{}' --burn-cap 1
Node is bootstrapped.
Estimated gas: 1446.306 units (will add 100 for safety)
Estimated storage: 451 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000576
    Expected counter: 2
    Gas limit: 1547
    Storage limit: 471 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000576
      payload fees(the block proposer) ....... +ꜩ0.000576
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ0
      Script:
        { parameter (or (ticket %save string) (address %send)) ;
          storage (list (ticket string)) ;
          code { UNPAIR ;
                 IF_LEFT
                   { CONS ; NIL operation ; PAIR }
                   { SWAP ;
                     IF_CONS
                       { DIG 2 ;
                         CONTRACT %ticket (ticket string) ;
                         ASSERT_SOME ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         NIL operation ;
                         SWAP ;
                         CONS ;
                         PAIR }
                       { PUSH string "no ticket to send" ; FAILWITH } } } }
        Initial storage: {}
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 194 bytes
        Paid storage size diff: 194 bytes
        Consumed gas: 1446.306
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.0485
          storage fees ........................... +ꜩ0.0485
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425

New contract [CONTRACT_HASH] originated.
Contract memorized as tickets_bag.

./octez-client --mode mockup --wait none originate contract tickets_blackhole transferring 0 from bootstrap1 running michelson_test_scripts/mini_scenarios/tickets_blackhole_016.tz --init Unit --burn-cap 1
Node is bootstrapped.
Estimated gas: 1410.196 units (will add 100 for safety)
Estimated storage: 308 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00043
    Expected counter: 3
    Gas limit: 1511
    Storage limit: 328 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00043
      payload fees(the block proposer) ....... +ꜩ0.00043
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ0
      Script:
        { parameter (ticket %ticket string) ;
          storage unit ;
          code { CDR ; NIL operation ; PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 51 bytes
        Paid storage size diff: 51 bytes
        Consumed gas: 1410.196
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.01275
          storage fees ........................... +ꜩ0.01275
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425

New contract [CONTRACT_HASH] originated.
Contract memorized as tickets_blackhole.

./octez-client --mode mockup --wait none transfer 0 from bootstrap1 to '[CONTRACT_HASH]' --burn-cap 1 --arg 'Pair "[PUBLIC_KEY_HASH]" 3'
Node is bootstrapped.
Estimated gas: 3588.513 units (will add 100 for safety)
Estimated storage: 66 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000667
    Expected counter: 4
    Gas limit: 3689
    Storage limit: 86 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000667
      payload fees(the block proposer) ....... +ꜩ0.000667
    Transaction:
      Amount: ꜩ0
      From: [PUBLIC_KEY_HASH]
      To: [CONTRACT_HASH]
      Parameter: (Pair "[PUBLIC_KEY_HASH]" 3)
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 158 bytes
      Paid storage size diff: 66 bytes
      Consumed gas: 2588.760
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.0165
        storage fees ........................... +ꜩ0.0165
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [CONTRACT_HASH]
          To: [PUBLIC_KEY_HASH]
          Parameter: (Pair 0x013c68b1807d42e2e2cb5a4dddb457b75dbf4a4dce00 (Pair "Ticket" 3))
          This transaction was successfully applied
          Consumed gas: 1000.398
          Ticket updates:
            Ticketer: [CONTRACT_HASH]
            Content type: string
            Content: "Ticket"
            Account updates:
              [PUBLIC_KEY_HASH] ... +3


./octez-client --mode mockup get ticket balance for bootstrap1 with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
3

./octez-client --mode mockup --wait none transfer 2 tickets from bootstrap1 to bootstrap2 with entrypoint default and contents '"Ticket"' and type string and ticketer '[CONTRACT_HASH]' --burn-cap 1
Node is bootstrapped.
Estimated gas: 2124.750 units (will add 100 for safety)
Estimated storage: 66 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000524
    Expected counter: 5
    Gas limit: 2225
    Storage limit: 86 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000524
      payload fees(the block proposer) ....... +ꜩ0.000524
    Transfer tickets:
      Ticket content: "Ticket"
      Ticket content type: string
      Ticket ticketer: [CONTRACT_HASH]
      Ticket amount: 2
      Destination: [PUBLIC_KEY_HASH]
      From: [PUBLIC_KEY_HASH]
      This tickets transfer was successfully applied
      Paid storage size diff: 66 bytes
      Ticket updates:
        Ticketer: [CONTRACT_HASH]
        Content type: string
        Content: "Ticket"
        Account updates:
          [PUBLIC_KEY_HASH] ... -2
          [PUBLIC_KEY_HASH] ... +2
      Consumed gas: 2124.750
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.0165
        storage fees ........................... +ꜩ0.0165


./octez-client --mode mockup get ticket balance for bootstrap1 with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
1

./octez-client --mode mockup get ticket balance for bootstrap2 with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
2

./octez-client --mode mockup --wait none transfer 1 tickets from bootstrap2 to '[CONTRACT_HASH]' with entrypoint save and contents '"Ticket"' and type string and ticketer '[CONTRACT_HASH]' --burn-cap 1
Node is bootstrapped.
Estimated gas: 4937.050 units (will add 100 for safety)
Estimated storage: 110 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000803
    Expected counter: 1
    Gas limit: 5038
    Storage limit: 130 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000803
      payload fees(the block proposer) ....... +ꜩ0.000803
    Transfer tickets:
      Ticket content: "Ticket"
      Ticket content type: string
      Ticket ticketer: [CONTRACT_HASH]
      Ticket amount: 1
      Destination: [CONTRACT_HASH]
      Entrypoint: save
      From: [PUBLIC_KEY_HASH]
      This tickets transfer was successfully applied
      Paid storage size diff: 66 bytes
      Ticket updates:
        Ticketer: [CONTRACT_HASH]
        Content type: string
        Content: "Ticket"
        Account updates:
          [PUBLIC_KEY_HASH] ... -1
      Consumed gas: 2126.280
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.0165
        storage fees ........................... +ꜩ0.0165
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [PUBLIC_KEY_HASH]
          To: [CONTRACT_HASH]
          Entrypoint: save
          Parameter: (Pair 0x013c68b1807d42e2e2cb5a4dddb457b75dbf4a4dce00 (Pair "Ticket" 1))
          This transaction was successfully applied
          Updated storage:
            { Pair 0x013c68b1807d42e2e2cb5a4dddb457b75dbf4a4dce00 (Pair "Ticket" 1) }
          Storage size: 238 bytes
          Paid storage size diff: 44 bytes
          Consumed gas: 2811.415
          Balance updates:
            [PUBLIC_KEY_HASH] ... -ꜩ0.011
            storage fees ........................... +ꜩ0.011
          Ticket updates:
            Ticketer: [CONTRACT_HASH]
            Content type: string
            Content: "Ticket"
            Account updates:
              [CONTRACT_HASH] ... +1


./octez-client --mode mockup get ticket balance for bootstrap2 with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
1

./octez-client --mode mockup get ticket balance for '[CONTRACT_HASH]' with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
1

./octez-client --mode mockup --wait none transfer 0 from bootstrap1 to '[CONTRACT_HASH]' --burn-cap 1 --entrypoint send --arg '"[CONTRACT_HASH]"'
Node is bootstrapped.
Estimated gas: 6447.214 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000954
    Expected counter: 6
    Gas limit: 6548
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000954
      payload fees(the block proposer) ....... +ꜩ0.000954
    Transaction:
      Amount: ꜩ0
      From: [PUBLIC_KEY_HASH]
      To: [CONTRACT_HASH]
      Entrypoint: send
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: {}
      Storage size: 194 bytes
      Consumed gas: 3694.587
      Ticket updates:
        Ticketer: [CONTRACT_HASH]
        Content type: string
        Content: "Ticket"
        Account updates:
          [CONTRACT_HASH] ... -1
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [CONTRACT_HASH]
          To: [CONTRACT_HASH]
          Entrypoint: ticket
          Parameter: (Pair 0x013c68b1807d42e2e2cb5a4dddb457b75dbf4a4dce00 (Pair "Ticket" 1))
          This transaction was successfully applied
          Updated storage: Unit
          Storage size: 51 bytes
          Consumed gas: 2753.788


./octez-client --mode mockup get ticket balance for '[CONTRACT_HASH]' with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
0

./octez-client --mode mockup get ticket balance for '[CONTRACT_HASH]' with ticketer '[CONTRACT_HASH]' and type string and content '"Ticket"'
0
