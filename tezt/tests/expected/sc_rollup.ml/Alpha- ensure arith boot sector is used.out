
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type string booting with '10 10 10 + +' --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 3110.497 units (will add 100 for safety)
Estimated storage: 6667 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000682
    Expected counter: 1
    Gas limit: 3211
    Storage limit: 6687 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000682
      payload fees(the block proposer) ....... +ꜩ0.000682
    Smart contract rollup origination:
      Kind: arith
      Parameter type: string
      Boot sector Blake2B hash: '8eb6ccf70902fcd3fa2040cf27dda202a71d85625516f22a0c9c67fc86057a7b'
      This smart contract rollup origination was successfully applied
      Consumed gas: 3110.497
      Storage size: 6667 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.66675
        storage fees ........................... +ꜩ1.66675


./octez-client rpc get '/chains/main/blocks/head/context/sc_rollup/[SC_ROLLUP_HASH]/genesis_info'
{ "level": 2,
  "commitment_hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-client --wait none send sc rollup message 'text:["10 +"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1876.654 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000475
    Expected counter: 1
    Gas limit: 1977
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000475
      payload fees(the block proposer) ....... +ꜩ0.000475
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1876.782
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 3
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 1
                               starting_level_of_current_commitment_period = 2
                               message_counter = 1
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 1
       back_pointers = [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-sc-rollup-client-alpha rpc get /global/state_hash
"[SC_ROLLUP_PVM_STATE_HASH]"

./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type string booting with 31 --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 3110.457 units (will add 100 for safety)
Estimated storage: 6657 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000672
    Expected counter: 2
    Gas limit: 3211
    Storage limit: 6677 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000672
      payload fees(the block proposer) ....... +ꜩ0.000672
    Smart contract rollup origination:
      Kind: arith
      Parameter type: string
      Boot sector Blake2B hash: 'b682df8c87f218dfa8151f2eaafe20e6f8d87b243f8fe63de6d49485a8bf6eea'
      This smart contract rollup origination was successfully applied
      Consumed gas: 3110.457
      Storage size: 6657 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.66425
        storage fees ........................... +ꜩ1.66425


./octez-client rpc get '/chains/main/blocks/head/context/sc_rollup/[SC_ROLLUP_HASH]/genesis_info'
{ "level": 4,
  "commitment_hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-client --wait none send sc rollup message 'text:["10 +"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1876.654 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000475
    Expected counter: 2
    Gas limit: 1977
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000475
      payload fees(the block proposer) ....... +ꜩ0.000475
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1876.782
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 5
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 1
                               starting_level_of_current_commitment_period = 4
                               message_counter = 1
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 1
       back_pointers = [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-sc-rollup-client-alpha rpc get /global/state_hash
"[SC_ROLLUP_PVM_STATE_HASH]"
