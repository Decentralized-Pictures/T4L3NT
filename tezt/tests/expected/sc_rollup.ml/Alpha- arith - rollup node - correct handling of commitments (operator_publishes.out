
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type string booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 3110.449 units (will add 100 for safety)
Estimated storage: 6655 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00067
    Expected counter: 1
    Gas limit: 3211
    Storage limit: 6675 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00067
      payload fees(the block proposer) ....... +ꜩ0.00067
    Smart contract rollup origination:
      Kind: arith
      Parameter type: string
      Boot sector Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 3110.449
      Storage size: 6655 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.66375
        storage fees ........................... +ꜩ1.66375


./octez-client --wait none send sc rollup message 'text:["CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1876.722 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000479
    Expected counter: 1
    Gas limit: 1977
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000479
      payload fees(the block proposer) ....... +ꜩ0.000479
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1876.850
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 3
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 1
                               starting_level_of_current_commitment_period = 2
                               message_counter = 1
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 1
       back_pointers = [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1877.540 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000491
    Expected counter: 2
    Gas limit: 1978
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000491
      payload fees(the block proposer) ....... +ꜩ0.000491
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1877.668
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 4
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 3
                               starting_level_of_current_commitment_period = 2
                               message_counter = 2
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 2
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1878.343 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000503
    Expected counter: 3
    Gas limit: 1979
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000503
      payload fees(the block proposer) ....... +ꜩ0.000503
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1878.343
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 5
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 6
                               starting_level_of_current_commitment_period = 2
                               message_counter = 3
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 3
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1878.939 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000515
    Expected counter: 4
    Gas limit: 1979
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000515
      payload fees(the block proposer) ....... +ꜩ0.000515
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1879.067
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 6
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 10
                               starting_level_of_current_commitment_period = 2
                               message_counter = 4
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 4
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1879.742 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000527
    Expected counter: 5
    Gas limit: 1980
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000527
      payload fees(the block proposer) ....... +ꜩ0.000527
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1879.742
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 7
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 15
                               starting_level_of_current_commitment_period = 2
                               message_counter = 5
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 5
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1880.338 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00054
    Expected counter: 6
    Gas limit: 1981
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00054
      payload fees(the block proposer) ....... +ꜩ0.00054
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1880.338
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 8
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 21
                               starting_level_of_current_commitment_period = 2
                               message_counter = 6
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 6
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1880.934 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000552
    Expected counter: 7
    Gas limit: 1981
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000552
      payload fees(the block proposer) ....... +ꜩ0.000552
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1880.934
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 9
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 28
                               starting_level_of_current_commitment_period = 2
                               message_counter = 7
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 7
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1881.530 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000564
    Expected counter: 8
    Gas limit: 1982
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000564
      payload fees(the block proposer) ....... +ꜩ0.000564
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1881.658
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 10
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 36
                               starting_level_of_current_commitment_period = 2
                               message_counter = 8
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 8
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1882.333 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000576
    Expected counter: 9
    Gas limit: 1983
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000576
      payload fees(the block proposer) ....... +ꜩ0.000576
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1882.333
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 11
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 45
                               starting_level_of_current_commitment_period = 2
                               message_counter = 9
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 9
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1882.929 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000588
    Expected counter: 10
    Gas limit: 1983
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000588
      payload fees(the block proposer) ....... +ꜩ0.000588
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1882.929
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 12
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 55
                               starting_level_of_current_commitment_period = 2
                               message_counter = 10
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 10
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1883.525 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.0006
    Expected counter: 11
    Gas limit: 1984
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.0006
      payload fees(the block proposer) ....... +ꜩ0.0006
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1883.525
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 13
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 66
                               starting_level_of_current_commitment_period = 2
                               message_counter = 11
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 11
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1884.121 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000612
    Expected counter: 12
    Gas limit: 1985
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000612
      payload fees(the block proposer) ....... +ꜩ0.000612
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1884.121
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 14
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 78
                               starting_level_of_current_commitment_period = 2
                               message_counter = 12
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 12
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1884.717 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000624
    Expected counter: 13
    Gas limit: 1985
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000624
      payload fees(the block proposer) ....... +ꜩ0.000624
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1884.717
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 15
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 91
                               starting_level_of_current_commitment_period = 2
                               message_counter = 13
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 13
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1885.313 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000636
    Expected counter: 14
    Gas limit: 1986
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000636
      payload fees(the block proposer) ....... +ꜩ0.000636
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1885.313
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 16
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 105
                               starting_level_of_current_commitment_period = 2
                               message_counter = 14
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 14
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1885.909 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000648
    Expected counter: 15
    Gas limit: 1986
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000648
      payload fees(the block proposer) ....... +ꜩ0.000648
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1885.909
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 17
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 120
                               starting_level_of_current_commitment_period = 2
                               message_counter = 15
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 15
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1886.505 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00066
    Expected counter: 16
    Gas limit: 1987
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00066
      payload fees(the block proposer) ....... +ꜩ0.00066
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1886.633
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 18
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 136
                               starting_level_of_current_commitment_period = 2
                               message_counter = 16
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 16
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1887.308 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000672
    Expected counter: 17
    Gas limit: 1988
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000672
      payload fees(the block proposer) ....... +ꜩ0.000672
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1887.308
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 19
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 153
                               starting_level_of_current_commitment_period = 2
                               message_counter = 17
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 17
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1887.904 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000684
    Expected counter: 18
    Gas limit: 1988
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000684
      payload fees(the block proposer) ....... +ꜩ0.000684
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1887.904
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 20
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 171
                               starting_level_of_current_commitment_period = 2
                               message_counter = 18
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 18
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1888.500 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000696
    Expected counter: 19
    Gas limit: 1989
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000696
      payload fees(the block proposer) ....... +ꜩ0.000696
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1888.500
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 21
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 190
                               starting_level_of_current_commitment_period = 2
                               message_counter = 19
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 19
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1889.096 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000708
    Expected counter: 20
    Gas limit: 1990
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000708
      payload fees(the block proposer) ....... +ꜩ0.000708
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1889.096
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 22
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 210
                               starting_level_of_current_commitment_period = 2
                               message_counter = 20
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 20
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1889.692 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00072
    Expected counter: 21
    Gas limit: 1990
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00072
      payload fees(the block proposer) ....... +ꜩ0.00072
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1889.692
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 23
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 231
                               starting_level_of_current_commitment_period = 2
                               message_counter = 21
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 21
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1890.288 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000733
    Expected counter: 22
    Gas limit: 1991
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000733
      payload fees(the block proposer) ....... +ꜩ0.000733
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1890.288
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 24
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 253
                               starting_level_of_current_commitment_period = 2
                               message_counter = 22
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 22
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1890.884 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000745
    Expected counter: 23
    Gas limit: 1991
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000745
      payload fees(the block proposer) ....... +ꜩ0.000745
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1890.884
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 25
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 276
                               starting_level_of_current_commitment_period = 2
                               message_counter = 23
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 23
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1891.480 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000757
    Expected counter: 24
    Gas limit: 1992
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000757
      payload fees(the block proposer) ....... +ꜩ0.000757
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1891.480
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 26
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 300
                               starting_level_of_current_commitment_period = 2
                               message_counter = 24
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 24
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1892.076 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000769
    Expected counter: 25
    Gas limit: 1993
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000769
      payload fees(the block proposer) ....... +ꜩ0.000769
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1892.076
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 27
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 325
                               starting_level_of_current_commitment_period = 2
                               message_counter = 25
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 25
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1892.672 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000781
    Expected counter: 26
    Gas limit: 1993
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000781
      payload fees(the block proposer) ....... +ꜩ0.000781
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1892.672
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 28
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 351
                               starting_level_of_current_commitment_period = 2
                               message_counter = 26
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 26
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1893.268 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000793
    Expected counter: 27
    Gas limit: 1994
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000793
      payload fees(the block proposer) ....... +ꜩ0.000793
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1893.268
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 29
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 378
                               starting_level_of_current_commitment_period = 2
                               message_counter = 27
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 27
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1893.864 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000805
    Expected counter: 28
    Gas limit: 1994
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000805
      payload fees(the block proposer) ....... +ꜩ0.000805
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1893.864
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 30
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 406
                               starting_level_of_current_commitment_period = 2
                               message_counter = 28
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 28
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1894.460 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000817
    Expected counter: 29
    Gas limit: 1995
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000817
      payload fees(the block proposer) ....... +ꜩ0.000817
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1894.460
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 31
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 435
                               starting_level_of_current_commitment_period = 2
                               message_counter = 29
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 29
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1895.056 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000829
    Expected counter: 30
    Gas limit: 1996
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000829
      payload fees(the block proposer) ....... +ꜩ0.000829
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1895.056
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 32
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 30
                               starting_level_of_current_commitment_period = 32
                               message_counter = 30
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 30
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1877.772 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000479
    Expected counter: 31
    Gas limit: 1978
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000479
      payload fees(the block proposer) ....... +ꜩ0.000479
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1877.772
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 33
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 31
                               starting_level_of_current_commitment_period = 32
                               message_counter = 1
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 31
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1878.368 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000491
    Expected counter: 32
    Gas limit: 1979
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000491
      payload fees(the block proposer) ....... +ꜩ0.000491
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1878.496
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 34
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 33
                               starting_level_of_current_commitment_period = 32
                               message_counter = 2
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 32
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1879.171 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000503
    Expected counter: 33
    Gas limit: 1980
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000503
      payload fees(the block proposer) ....... +ꜩ0.000503
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1879.171
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 35
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 36
                               starting_level_of_current_commitment_period = 32
                               message_counter = 3
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 33
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1879.767 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000515
    Expected counter: 34
    Gas limit: 1980
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000515
      payload fees(the block proposer) ....... +ꜩ0.000515
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1879.767
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 36
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 40
                               starting_level_of_current_commitment_period = 32
                               message_counter = 4
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 34
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1880.363 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000528
    Expected counter: 35
    Gas limit: 1981
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000528
      payload fees(the block proposer) ....... +ꜩ0.000528
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1880.363
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 37
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 45
                               starting_level_of_current_commitment_period = 32
                               message_counter = 5
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 35
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1880.959 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00054
    Expected counter: 36
    Gas limit: 1981
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00054
      payload fees(the block proposer) ....... +ꜩ0.00054
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1880.959
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 38
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 51
                               starting_level_of_current_commitment_period = 32
                               message_counter = 6
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 36
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1881.555 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000552
    Expected counter: 37
    Gas limit: 1982
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000552
      payload fees(the block proposer) ....... +ꜩ0.000552
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1881.555
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 39
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 58
                               starting_level_of_current_commitment_period = 32
                               message_counter = 7
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 37
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1882.151 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000564
    Expected counter: 38
    Gas limit: 1983
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000564
      payload fees(the block proposer) ....... +ꜩ0.000564
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1882.151
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 40
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 66
                               starting_level_of_current_commitment_period = 32
                               message_counter = 8
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 38
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1882.747 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000576
    Expected counter: 39
    Gas limit: 1983
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000576
      payload fees(the block proposer) ....... +ꜩ0.000576
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1882.747
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 41
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 75
                               starting_level_of_current_commitment_period = 32
                               message_counter = 9
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 39
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1883.343 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000588
    Expected counter: 40
    Gas limit: 1984
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000588
      payload fees(the block proposer) ....... +ꜩ0.000588
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1883.343
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 42
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 85
                               starting_level_of_current_commitment_period = 32
                               message_counter = 10
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 40
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1883.939 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.0006
    Expected counter: 41
    Gas limit: 1984
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.0006
      payload fees(the block proposer) ....... +ꜩ0.0006
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1883.939
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 43
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 96
                               starting_level_of_current_commitment_period = 32
                               message_counter = 11
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 41
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1884.535 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000612
    Expected counter: 42
    Gas limit: 1985
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000612
      payload fees(the block proposer) ....... +ꜩ0.000612
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1884.535
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 44
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 108
                               starting_level_of_current_commitment_period = 32
                               message_counter = 12
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 42
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1885.131 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000624
    Expected counter: 43
    Gas limit: 1986
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000624
      payload fees(the block proposer) ....... +ꜩ0.000624
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1885.131
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 45
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 121
                               starting_level_of_current_commitment_period = 32
                               message_counter = 13
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 43
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1885.727 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000636
    Expected counter: 44
    Gas limit: 1986
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000636
      payload fees(the block proposer) ....... +ꜩ0.000636
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1885.727
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 46
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 135
                               starting_level_of_current_commitment_period = 32
                               message_counter = 14
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 44
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1886.323 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000648
    Expected counter: 45
    Gas limit: 1987
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000648
      payload fees(the block proposer) ....... +ꜩ0.000648
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1886.323
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 47
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 150
                               starting_level_of_current_commitment_period = 32
                               message_counter = 15
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 45
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1886.919 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00066
    Expected counter: 46
    Gas limit: 1987
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00066
      payload fees(the block proposer) ....... +ꜩ0.00066
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1886.919
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 48
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 166
                               starting_level_of_current_commitment_period = 32
                               message_counter = 16
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 46
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1887.515 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000672
    Expected counter: 47
    Gas limit: 1988
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000672
      payload fees(the block proposer) ....... +ꜩ0.000672
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1887.515
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 49
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 183
                               starting_level_of_current_commitment_period = 32
                               message_counter = 17
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 47
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1888.111 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000684
    Expected counter: 48
    Gas limit: 1989
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000684
      payload fees(the block proposer) ....... +ꜩ0.000684
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1888.111
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 50
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 201
                               starting_level_of_current_commitment_period = 32
                               message_counter = 18
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 48
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1888.707 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000696
    Expected counter: 49
    Gas limit: 1989
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000696
      payload fees(the block proposer) ....... +ꜩ0.000696
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1888.707
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 51
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 220
                               starting_level_of_current_commitment_period = 32
                               message_counter = 19
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 49
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1889.303 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000708
    Expected counter: 50
    Gas limit: 1990
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000708
      payload fees(the block proposer) ....... +ꜩ0.000708
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1889.303
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 52
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 240
                               starting_level_of_current_commitment_period = 32
                               message_counter = 20
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 50
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1889.899 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00072
    Expected counter: 51
    Gas limit: 1990
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00072
      payload fees(the block proposer) ....... +ꜩ0.00072
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1889.899
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 53
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 261
                               starting_level_of_current_commitment_period = 32
                               message_counter = 21
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 51
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1890.495 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000733
    Expected counter: 52
    Gas limit: 1991
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000733
      payload fees(the block proposer) ....... +ꜩ0.000733
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1890.495
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 54
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 283
                               starting_level_of_current_commitment_period = 32
                               message_counter = 22
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 52
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1891.091 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000745
    Expected counter: 53
    Gas limit: 1992
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000745
      payload fees(the block proposer) ....... +ꜩ0.000745
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1891.091
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 55
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 306
                               starting_level_of_current_commitment_period = 32
                               message_counter = 23
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 53
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1891.687 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000757
    Expected counter: 54
    Gas limit: 1992
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000757
      payload fees(the block proposer) ....... +ꜩ0.000757
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1891.687
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 56
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 330
                               starting_level_of_current_commitment_period = 32
                               message_counter = 24
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 54
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1892.283 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000769
    Expected counter: 55
    Gas limit: 1993
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000769
      payload fees(the block proposer) ....... +ꜩ0.000769
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1892.283
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 57
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 355
                               starting_level_of_current_commitment_period = 32
                               message_counter = 25
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 55
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1892.879 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000781
    Expected counter: 56
    Gas limit: 1993
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000781
      payload fees(the block proposer) ....... +ꜩ0.000781
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1892.879
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 58
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 381
                               starting_level_of_current_commitment_period = 32
                               message_counter = 26
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 56
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1893.475 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000793
    Expected counter: 57
    Gas limit: 1994
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000793
      payload fees(the block proposer) ....... +ꜩ0.000793
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1893.475
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 59
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 408
                               starting_level_of_current_commitment_period = 32
                               message_counter = 27
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 57
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1894.071 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000805
    Expected counter: 58
    Gas limit: 1995
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000805
      payload fees(the block proposer) ....... +ꜩ0.000805
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1894.071
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 60
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 436
                               starting_level_of_current_commitment_period = 32
                               message_counter = 28
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 58
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1894.667 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000817
    Expected counter: 59
    Gas limit: 1995
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000817
      payload fees(the block proposer) ....... +ꜩ0.000817
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1894.667
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 61
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 465
                               starting_level_of_current_commitment_period = 32
                               message_counter = 29
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 59
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-client --wait none send sc rollup message 'text:["CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE","CAFEBABE"]' from bootstrap2 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1895.263 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000829
    Expected counter: 60
    Gas limit: 1996
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000829
      payload fees(the block proposer) ....... +ꜩ0.000829
    Smart contract rollup messages submission:
      Address: [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1895.263
      Resulting inbox state: { rollup = [SC_ROLLUP_HASH]
                               level = 62
                               current messages hash  = [SC_ROLLUP_INBOX_HASH]
                               nb_messages_in_commitment_period = 30
                               starting_level_of_current_commitment_period = 62
                               message_counter = 30
                               old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                     
       content = [SC_ROLLUP_INBOX_HASH]
       index = 60
       back_pointers = [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
                                                     [SC_ROLLUP_INBOX_HASH]
    
                               }


./octez-sc-rollup-client-alpha rpc get /local/last_published_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 32,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "5117" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]",
  "published_at_level": 35 }

./octez-sc-rollup-client-alpha rpc get /local/last_published_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 32,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "5117" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]",
  "published_at_level": 35 }
