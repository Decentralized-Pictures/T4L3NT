
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type string booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 3110.449 units (will add 100 for safety)
Estimated storage: 6655 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.00067
    Expected counter: 1
    Gas limit: 3211
    Storage limit: 6675 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.00067
      payload fees(the block proposer) ....... +ꜩ0.00067
    Smart contract rollup origination:
      Kind: arith
      Parameter type: string
      Boot sector Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 3110.449
      Storage size: 6655 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.66375
        storage fees ........................... +ꜩ1.66375


./octez-client rpc get '/chains/main/blocks/head/context/sc_rollup/[SC_ROLLUP_HASH]/genesis_info'
{ "level": 2,
  "commitment_hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-sc-rollup-client-alpha rpc get /global/last_stored_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 32,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "0" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-sc-rollup-client-alpha rpc get /local/last_published_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 32,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "0" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-client rpc get /chains/main/blocks/head/context/constants
{ "proof_of_work_nonce_size": 8, "nonce_length": 32,
  "max_anon_ops_per_block": 132, "max_operation_data_length": 32768,
  "max_proposals_per_delegate": 20, "max_micheline_node_count": 50000,
  "max_micheline_bytes_limit": 50000,
  "max_allowed_global_constants_depth": 10000, "cache_layout_size": 3,
  "michelson_maximum_type_size": 2001,
  "sc_max_wrapped_proof_binary_size": 30000,
  "sc_rollup_message_size_limit": 4096, "preserved_cycles": 2,
  "blocks_per_cycle": 8, "blocks_per_commitment": 4,
  "nonce_revelation_threshold": 4, "blocks_per_stake_snapshot": 4,
  "cycles_per_voting_period": 8, "hard_gas_limit_per_operation": "1040000",
  "hard_gas_limit_per_block": "5200000", "proof_of_work_threshold": "-1",
  "minimal_stake": "6000000000", "vdf_difficulty": "50000",
  "seed_nonce_revelation_tip": "125000", "origination_size": 257,
  "baking_reward_fixed_portion": "333333",
  "baking_reward_bonus_per_slot": "3921",
  "endorsing_reward_per_slot": "2604", "cost_per_byte": "250",
  "hard_storage_limit_per_operation": "60000", "quorum_min": 2000,
  "quorum_max": 7000, "min_proposal_quorum": 500,
  "liquidity_baking_subsidy": "83333",
  "liquidity_baking_toggle_ema_threshold": 1000000000,
  "max_operations_time_to_live": 120, "minimal_block_delay": "1",
  "delay_increment_per_round": "1", "consensus_committee_size": 256,
  "consensus_threshold": 0,
  "minimal_participation_ratio": { "numerator": 2, "denominator": 3 },
  "max_slashing_period": 2, "frozen_deposits_percentage": 5,
  "double_baking_punishment": "640000000",
  "ratio_of_frozen_deposits_slashed_per_double_endorsement":
    { "numerator": 1, "denominator": 2 }, "cache_script_size": 100000000,
  "cache_stake_distribution_cycles": 8, "cache_sampler_state_cycles": 8,
  "tx_rollup_enable": true, "tx_rollup_origination_size": 4000,
  "tx_rollup_hard_size_limit_per_inbox": 500000,
  "tx_rollup_hard_size_limit_per_message": 5000,
  "tx_rollup_max_withdrawals_per_batch": 15,
  "tx_rollup_commitment_bond": "10000000000",
  "tx_rollup_finality_period": 40000, "tx_rollup_withdraw_period": 40000,
  "tx_rollup_max_inboxes_count": 40100,
  "tx_rollup_max_messages_per_inbox": 1010,
  "tx_rollup_max_commitments_count": 80100,
  "tx_rollup_cost_per_byte_ema_factor": 120,
  "tx_rollup_max_ticket_payload_size": 2048,
  "tx_rollup_rejection_max_proof_size": 30000,
  "tx_rollup_sunset_level": 3473409,
  "dal_parametric":
    { "feature_enable": false, "number_of_slots": 16, "endorsement_lag": 1,
      "availability_threshold": 50, "redundancy_factor": 4,
      "page_size": 4096, "slot_size": 65536, "number_of_shards": 256 },
  "sc_rollup_enable": true, "sc_rollup_origination_size": 6314,
  "sc_rollup_challenge_window_in_blocks": 1,
  "sc_rollup_max_number_of_messages_per_commitment_period": 300000000,
  "sc_rollup_stake_amount": "10000000000",
  "sc_rollup_commitment_period_in_blocks": 30,
  "sc_rollup_max_lookahead_in_blocks": 30000,
  "sc_rollup_max_active_outbox_levels": 20160,
  "sc_rollup_max_outbox_messages_per_level": 100,
  "sc_rollup_number_of_sections_in_dissection": 32,
  "sc_rollup_timeout_period_in_blocks": 20160,
  "sc_rollup_max_number_of_cemented_commitments": 5,
  "zk_rollup_enable": false, "zk_rollup_origination_size": 4000,
  "zk_rollup_min_pending_to_process": 10 }

./octez-client --wait none recover bond of '[PUBLIC_KEY_HASH]' for sc rollup '[SC_ROLLUP_HASH]' --fee 1
Node is bootstrapped.
This simulation failed:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ1
    Expected counter: 3
    Gas limit: 1040000
    Storage limit: 60000 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ1
      payload fees(the block proposer) ....... +ꜩ1
    Smart contract bond retrieval:
      Address: [SC_ROLLUP_HASH]
      From: [PUBLIC_KEY_HASH]
      This operation FAILED.

Error:
  Attempted to withdraw while not staked on the last cemented commitment.

./octez-client --wait none cement commitment '[SC_ROLLUP_COMMITMENT_HASH]' from bootstrap1 for sc rollup '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 4115.524 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000719
    Expected counter: 3
    Gas limit: 4216
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000719
      payload fees(the block proposer) ....... +ꜩ0.000719
    Smart contract rollup commitment cementing:
      Address: [SC_ROLLUP_HASH]
      Commitment: [SC_ROLLUP_COMMITMENT_HASH]
      This smart contract rollup commitment cementing was successfully applied
      Consumed gas: 4115.524
      Inbox level: 32


./octez-client rpc get /chains/main/blocks/head/context/constants
{ "proof_of_work_nonce_size": 8, "nonce_length": 32,
  "max_anon_ops_per_block": 132, "max_operation_data_length": 32768,
  "max_proposals_per_delegate": 20, "max_micheline_node_count": 50000,
  "max_micheline_bytes_limit": 50000,
  "max_allowed_global_constants_depth": 10000, "cache_layout_size": 3,
  "michelson_maximum_type_size": 2001,
  "sc_max_wrapped_proof_binary_size": 30000,
  "sc_rollup_message_size_limit": 4096, "preserved_cycles": 2,
  "blocks_per_cycle": 8, "blocks_per_commitment": 4,
  "nonce_revelation_threshold": 4, "blocks_per_stake_snapshot": 4,
  "cycles_per_voting_period": 8, "hard_gas_limit_per_operation": "1040000",
  "hard_gas_limit_per_block": "5200000", "proof_of_work_threshold": "-1",
  "minimal_stake": "6000000000", "vdf_difficulty": "50000",
  "seed_nonce_revelation_tip": "125000", "origination_size": 257,
  "baking_reward_fixed_portion": "333333",
  "baking_reward_bonus_per_slot": "3921",
  "endorsing_reward_per_slot": "2604", "cost_per_byte": "250",
  "hard_storage_limit_per_operation": "60000", "quorum_min": 2000,
  "quorum_max": 7000, "min_proposal_quorum": 500,
  "liquidity_baking_subsidy": "83333",
  "liquidity_baking_toggle_ema_threshold": 1000000000,
  "max_operations_time_to_live": 120, "minimal_block_delay": "1",
  "delay_increment_per_round": "1", "consensus_committee_size": 256,
  "consensus_threshold": 0,
  "minimal_participation_ratio": { "numerator": 2, "denominator": 3 },
  "max_slashing_period": 2, "frozen_deposits_percentage": 5,
  "double_baking_punishment": "640000000",
  "ratio_of_frozen_deposits_slashed_per_double_endorsement":
    { "numerator": 1, "denominator": 2 }, "cache_script_size": 100000000,
  "cache_stake_distribution_cycles": 8, "cache_sampler_state_cycles": 8,
  "tx_rollup_enable": true, "tx_rollup_origination_size": 4000,
  "tx_rollup_hard_size_limit_per_inbox": 500000,
  "tx_rollup_hard_size_limit_per_message": 5000,
  "tx_rollup_max_withdrawals_per_batch": 15,
  "tx_rollup_commitment_bond": "10000000000",
  "tx_rollup_finality_period": 40000, "tx_rollup_withdraw_period": 40000,
  "tx_rollup_max_inboxes_count": 40100,
  "tx_rollup_max_messages_per_inbox": 1010,
  "tx_rollup_max_commitments_count": 80100,
  "tx_rollup_cost_per_byte_ema_factor": 120,
  "tx_rollup_max_ticket_payload_size": 2048,
  "tx_rollup_rejection_max_proof_size": 30000,
  "tx_rollup_sunset_level": 3473409,
  "dal_parametric":
    { "feature_enable": false, "number_of_slots": 16, "endorsement_lag": 1,
      "availability_threshold": 50, "redundancy_factor": 4,
      "page_size": 4096, "slot_size": 65536, "number_of_shards": 256 },
  "sc_rollup_enable": true, "sc_rollup_origination_size": 6314,
  "sc_rollup_challenge_window_in_blocks": 1,
  "sc_rollup_max_number_of_messages_per_commitment_period": 300000000,
  "sc_rollup_stake_amount": "10000000000",
  "sc_rollup_commitment_period_in_blocks": 30,
  "sc_rollup_max_lookahead_in_blocks": 30000,
  "sc_rollup_max_active_outbox_levels": 20160,
  "sc_rollup_max_outbox_messages_per_level": 100,
  "sc_rollup_number_of_sections_in_dissection": 32,
  "sc_rollup_timeout_period_in_blocks": 20160,
  "sc_rollup_max_number_of_cemented_commitments": 5,
  "zk_rollup_enable": false, "zk_rollup_origination_size": 4000,
  "zk_rollup_min_pending_to_process": 10 }

./octez-client --wait none recover bond of '[PUBLIC_KEY_HASH]' for sc rollup '[SC_ROLLUP_HASH]' --fee 1
Node is bootstrapped.
Estimated gas: 3205.162 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ1
    Expected counter: 4
    Gas limit: 3306
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ1
      payload fees(the block proposer) ....... +ꜩ1
    Smart contract bond retrieval:
      Address: [SC_ROLLUP_HASH]
      From: [PUBLIC_KEY_HASH]
      This smart contract bond retrieval was successfully applied
      Balance updates:
        Frozen_bonds([PUBLIC_KEY_HASH],[SC_ROLLUP_HASH]) ... -ꜩ10000
        [PUBLIC_KEY_HASH] ....................................................... +ꜩ10000
      Consumed gas: 3205.162


./octez-sc-rollup-client-alpha rpc get /local/last_published_commitment
null

./octez-sc-rollup-client-alpha rpc get /global/last_stored_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 32,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "0" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]" }

./octez-sc-rollup-client-alpha rpc get /local/last_published_commitment
{ "commitment":
    { "compressed_state":
        "[SC_ROLLUP_PVM_STATE_HASH]",
      "inbox_level": 62,
      "predecessor": "[SC_ROLLUP_COMMITMENT_HASH]",
      "number_of_ticks": "0" },
  "hash": "[SC_ROLLUP_COMMITMENT_HASH]",
  "published_at_level": 65 }
