
./octez-client --wait none originate smart rollup rollup from bootstrap1 of kind arith of type string with kernel  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 1920.157 units (will add 100 for safety)
Estimated storage: 6552 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000551
    Expected counter: 1
    Gas limit: 2021
    Storage limit: 6572 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000551
      payload fees(the block proposer) ....... +ꜩ0.000551
    Smart rollup origination:
      Kind: arith
      Parameter type: string
      Kernel Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart rollup origination was successfully applied
      Consumed gas: 1920.124
      Storage size: 6552 bytes
      Address: [SMART_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.638
        storage fees ........................... +ꜩ1.638

Smart rollup [SMART_ROLLUP_HASH] memorized as "rollup"

./octez-client --wait none publish commitment from '[PUBLIC_KEY_HASH]' for smart rollup '[SMART_ROLLUP_HASH]' with compressed state '[SC_ROLLUP_PVM_STATE_HASH]' at inbox level 4 and predecessor '[SC_ROLLUP_COMMITMENT_HASH]' and number of ticks 1
Node is bootstrapped.
Estimated gas: 6368.924 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000967
    Expected counter: 1
    Gas limit: 6469
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000967
      payload fees(the block proposer) ....... +ꜩ0.000967
    Smart rollup commitment publishing:
      Address: [SMART_ROLLUP_HASH]
      Commitment:
        compressed_state: [SC_ROLLUP_PVM_STATE_HASH]
        inbox_level: 4
        predecessor: [SC_ROLLUP_COMMITMENT_HASH]
        number_of_ticks: 1
      This smart rollup commitment publishing was successfully applied
      Consumed gas: 6368.858
      Hash of commit: [SC_ROLLUP_COMMITMENT_HASH]
      Commitment published at level: 6
      Balance updates:
        [PUBLIC_KEY_HASH] ...................................................... -ꜩ10000
        Frozen_bonds([PUBLIC_KEY_HASH],[SMART_ROLLUP_HASH]) ... +ꜩ10000


./octez-client --wait none publish commitment from '[PUBLIC_KEY_HASH]' for smart rollup '[SMART_ROLLUP_HASH]' with compressed state '[SC_ROLLUP_PVM_STATE_HASH]' at inbox level 4 and predecessor '[SC_ROLLUP_COMMITMENT_HASH]' and number of ticks 2
Node is bootstrapped.
Estimated gas: 7067.126 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001037
    Expected counter: 1
    Gas limit: 7168
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001037
      payload fees(the block proposer) ....... +ꜩ0.001037
    Smart rollup commitment publishing:
      Address: [SMART_ROLLUP_HASH]
      Commitment:
        compressed_state: [SC_ROLLUP_PVM_STATE_HASH]
        inbox_level: 4
        predecessor: [SC_ROLLUP_COMMITMENT_HASH]
        number_of_ticks: 2
      This smart rollup commitment publishing was successfully applied
      Consumed gas: 7067.060
      Hash of commit: [SC_ROLLUP_COMMITMENT_HASH]
      Commitment published at level: 7
      Balance updates:
        [PUBLIC_KEY_HASH] ...................................................... -ꜩ10000
        Frozen_bonds([PUBLIC_KEY_HASH],[SMART_ROLLUP_HASH]) ... +ꜩ10000


./octez-client --wait none timeout dispute on smart rollup '[SMART_ROLLUP_HASH]' with '[PUBLIC_KEY_HASH]' against '[PUBLIC_KEY_HASH]' from bootstrap1
Node is bootstrapped.
Estimated gas: 3715.525 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000668
    Expected counter: 2
    Gas limit: 3816
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000668
      payload fees(the block proposer) ....... +ꜩ0.000668
    Smart rollup refutation timeout:
      Address: [SMART_ROLLUP_HASH]
      First staker (Alice): [PUBLIC_KEY_HASH]
      Second staker (Bob): [PUBLIC_KEY_HASH]
      This smart rollup refutation timeout was successfully applied
      Consumed gas: 3715.459
      Refutation game status: Game ended: [PUBLIC_KEY_HASH] lost because: timeout
      Balance updates:
        Frozen_bonds([PUBLIC_KEY_HASH],[SMART_ROLLUP_HASH]) ... -ꜩ10000
        smart rollup refutation punishments ....................................................... +ꜩ10000
        smart rollup refutation rewards ........................................................... -ꜩ5000
        [PUBLIC_KEY_HASH] ...................................................... +ꜩ5000

