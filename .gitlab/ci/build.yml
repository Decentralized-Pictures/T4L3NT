---

.build:
  extends: .build_template
  variables:
    ARCH: ""
    # We fix the value of GIT_{SHORTREF,DATETIME,VERSION} (these are
    # read by src/lib_version and output by the binaries `--version`
    # option). Fixing these values on development builds improves
    # cache usage.
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: "1970-01-01 00:00:00 +0000%"
    GIT_VERSION: "dev"
  script:
    - make -C ${CI_PROJECT_DIR}/.gitlab/ci  build-full-unreleased
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
  artifacts:
    name: "build-$ARCH-$CI_COMMIT_REF_SLUG"
    paths:
      - octez-*
      - tezos-*
      - src/proto_*/parameters/*.json
      - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    expire_in: 1 day
    when: on_success

build_x86_64:
  extends:
    - .build
    - .rules_template__development_and_extended
    # This job is the main bottleneck since a lot of tests depend on it.
    # So we start it even before sanity_ci.
    - .needs_template__wait_for_trigger_job
  variables:
    ARCH: "x86_64"

build_arm64:
  extends:
    - .build
    - .rules_template__development_arm64
  variables:
    ARCH: "arm64"
    # Disable coverage for arm64
    COVERAGE_OPTIONS: ""
  tags:
    - arm64

build_get_contracts:
  extends:
    - .build_template
    - .rules_template__development
  script:
    - dune build @devtools/get_contracts/check

# similar to the build template above, this template
# compiles all binaries using the static profile.
.build_static_binaries_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies_template
  stage: build
  variables:
    ARCH: ""
  script:
    - make -C ${CI_PROJECT_DIR}/.gitlab/ci build-static-binaries

  artifacts:
    paths:
      - "octez-binaries/$ARCH/*"

# x86_64 static binaries are necessary for development branches, as we want to make
# sure the build does not break. We also need it for release tags, to as its artifacts
# are published in the stage `publish_release`. For this reason, we build it in all pipelines,
# except on latest release branches.
build:static-x86_64-linux-binaries:
  extends:
    - .build_static_binaries_template
    - .rules_template__not_on_latest_release
    # Even though not many tests depend on static executables, some of those that do
    # are limiting factors in the total duration of pipelines.
    # So we start this job as early as possible, without waiting for sanity_ci.
    - .needs_template__wait_for_trigger_job
  variables:
    ARCH: "x86_64"

# arm64 static binaries are only built for master and releases.
build:static-arm64-linux-binaries:
  extends:
    - .build_static_binaries_template
    - .rules_template__master_and_releases
  variables:
    ARCH: "arm64"
  tags:
    - arm64
