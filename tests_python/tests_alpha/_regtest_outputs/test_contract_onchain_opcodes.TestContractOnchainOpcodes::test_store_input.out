tests_alpha/test_contract_onchain_opcodes.py::TestContractOnchainOpcodes::test_store_input

Node is bootstrapped.
Estimated gas: 1427 units (will add 100 for safety)
Estimated storage: 257 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000406
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1527
    Storage limit: 277 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000406
      fees(the baker who will include this operation,0) ... +ꜩ0.000406
    Transaction:
      Amount: ꜩ1000
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Consumed gas: 1427
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ1000
        [CONTRACT_HASH] ... +ꜩ1000
        [CONTRACT_HASH] ... -ꜩ0.06425

Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 1427 units (will add 100 for safety)
Estimated storage: 257 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000406
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1527
    Storage limit: 277 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000406
      fees(the baker who will include this operation,0) ... +ꜩ0.000406
    Transaction:
      Amount: ꜩ2000
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Consumed gas: 1427
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ2000
        [CONTRACT_HASH] ... +ꜩ2000
        [CONTRACT_HASH] ... -ꜩ0.06425

Injected block [BLOCK_HASH]
1000 ꜩ
2000 ꜩ
Node is bootstrapped.
Estimated gas: 1561.588 units (will add 100 for safety)
Estimated storage: 298 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000438
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1662
    Storage limit: 318 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000438
      fees(the baker who will include this operation,0) ... +ꜩ0.000438
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ100
      Script:
        { parameter string ;
          storage string ;
          code { CAR ; NIL operation ; PAIR } }
        Initial storage: ""
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 41 bytes
        Paid storage size diff: 41 bytes
        Consumed gas: 1561.588
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.01025
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

New contract [CONTRACT_HASH] originated.
Contract memorized as store_input.
Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 2211.644 units (will add 100 for safety)
Estimated storage: 7 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.0005
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 2312
    Storage limit: 27 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.0005
      fees(the baker who will include this operation,0) ... +ꜩ0.0005
    Transaction:
      Amount: ꜩ100
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Parameter: "abcdefg"
      This transaction was successfully applied
      Updated storage: "abcdefg"
      Storage size: 48 bytes
      Paid storage size diff: 7 bytes
      Consumed gas: 2211.644
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ0.00175
        [CONTRACT_HASH] ... -ꜩ100
        [CONTRACT_HASH] ... +ꜩ100

Injected block [BLOCK_HASH]
200 ꜩ
"abcdefg"
Node is bootstrapped.
Estimated gas: 2211.672 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000496
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 2312
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000496
      fees(the baker who will include this operation,0) ... +ꜩ0.000496
    Transaction:
      Amount: ꜩ100
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Parameter: "xyz"
      This transaction was successfully applied
      Updated storage: "xyz"
      Storage size: 44 bytes
      Consumed gas: 2211.672
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ100
        [CONTRACT_HASH] ... +ꜩ100

Injected block [BLOCK_HASH]
"xyz"
