tests_alpha/test_contract.py::TestOriginateContractFromContract::test_originate_contract_from_contract_transfer

Node is bootstrapped.
Estimated gas: 3525.107 units (will add 100 for safety)
Estimated storage: 295 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000612
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 3626
    Storage limit: 315 bytes
    Balance updates:
      [CONTRACT_HASH] ... -ꜩ0.000612
      payload fees(the block proposer) ....... +ꜩ0.000612
    Transaction:
      Amount: ꜩ0
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 93 bytes
      Consumed gas: 2121.040
    Internal operations:
      Origination:
        From: [CONTRACT_HASH]
        Credit: ꜩ0
        Script:
          { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } }
          Initial storage: Unit
          No delegate for this contract
          This origination was successfully applied
          Originated contracts:
            [CONTRACT_HASH]
          Storage size: 38 bytes
          Paid storage size diff: 38 bytes
          Consumed gas: 1404.067
          Balance updates:
            [CONTRACT_HASH] ... -ꜩ0.0095
            storage fees ........................... +ꜩ0.0095
            [CONTRACT_HASH] ... -ꜩ0.06425
            storage fees ........................... +ꜩ0.06425

New contract [CONTRACT_HASH] originated.
Injected block at minimal timestamp
