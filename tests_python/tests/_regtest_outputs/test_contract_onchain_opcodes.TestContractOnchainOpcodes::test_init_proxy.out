tests/test_contract_onchain_opcodes.py::TestContractOnchainOpcodes::test_init_proxy

Node is bootstrapped.
Estimated gas: 1778.894 units (will add 100 + 46 for safety)
Estimated storage: 333 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.0005
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1925
    Storage limit: 353 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.0005
      fees(the baker who will include this operation,2) ... +ꜩ0.0005
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ1000
      Script:
        { parameter (contract unit) ;
          storage unit ;
          code { UNPAIR ;
                 AMOUNT ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 DIP { NIL operation } ;
                 CONS ;
                 PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 76 bytes
        Paid storage size diff: 76 bytes
        Consumed gas: 1778.894
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.019
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ1000
          [CONTRACT_HASH] ... +ꜩ1000

New contract [CONTRACT_HASH] originated.
Contract memorized as proxy.
Injected block [BLOCK_HASH]
