tests/test_contract_onchain_opcodes.py::TestContractOnchainOpcodes::test_source

Node is bootstrapped.
Estimated gas: 1688.020 units (will add 100 + 36 for safety)
Estimated storage: 322 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000493
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1825
    Storage limit: 342 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000493
      fees(the baker who will include this operation,2) ... +ꜩ0.000493
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ1000
      Script:
        { parameter unit ;
          storage address ;
          code { DROP ; SOURCE ; NIL operation ; PAIR } }
        Initial storage: "[CONTRACT_HASH]"
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 65 bytes
        Paid storage size diff: 65 bytes
        Consumed gas: 1688.020
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.01625
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ1000
          [CONTRACT_HASH] ... +ꜩ1000

New contract [CONTRACT_HASH] originated.
Contract memorized as source.
Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 2569.359 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000515
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 2670
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000515
      fees(the baker who will include this operation,2) ... +ꜩ0.000515
    Transaction:
      Amount: ꜩ0
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: 0x0000e7670f32038107a59a2b9cfefae36ea21f5aa63c
      Storage size: 65 bytes
      Consumed gas: 2569.359

Injected block [BLOCK_HASH]
"[CONTRACT_HASH]"
[CONTRACT_HASH]

Node is bootstrapped.
Estimated gas: 6101.344 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000915
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 6202
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000915
      fees(the baker who will include this operation,2) ... +ꜩ0.000915
    Transaction:
      Amount: ꜩ0
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 76 bytes
      Consumed gas: 3531.985
    Internal operations:
      Transaction:
        Amount: ꜩ0
        From: [CONTRACT_HASH]
        To: [CONTRACT_HASH]
        This transaction was successfully applied
        Updated storage: 0x0000e7670f32038107a59a2b9cfefae36ea21f5aa63c
        Storage size: 65 bytes
        Consumed gas: 2569.359

Injected block [BLOCK_HASH]
"[CONTRACT_HASH]"
