# This is a recursive implementation of the factorial function illustrating the
# LAMBDA_REC instruction.

parameter nat;
storage nat;
code
  {
    CAR;
    LAMBDA_REC nat nat
               # Let us call f the block below.
               { # Stack is: n, f
                 # where n is the factorial's parameter.
                 PUSH int -1;
                 ADD;
                 # Stack is: n-1, f.
                 ISNAT;
                 IF_NONE
                   # If n-1 is not a natural, i.e. n = 0, return 1.
                   { DROP; PUSH nat 1 }
                   # Else, run f(n-1) and multiply the result by n (= n-1 + 1).
                   { DUP; DIP {EXEC}; PUSH nat 1; ADD; MUL }
               };
    SWAP;
    EXEC;
    NIL operation;
    PAIR
  }
