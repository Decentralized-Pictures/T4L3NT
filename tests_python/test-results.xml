<testsuites>
  <testsuite tests="4814">
    <testcase classname="tests_014.test_client_without_node.TestConfigValid" name="test_config_node_port" time="2.058" />
    <testcase classname="tests_014.test_client_without_node.TestConfigValid" name="test_config_web_port" time="2.050" />
    <testcase classname="tests_014.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="7.524" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="13.874" />
    <testcase classname="tests_014.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.506" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="31.099" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="3.008" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_014" time="2.953" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="124.461" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.602" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="4.969" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.510" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.508" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="1.025" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="1.036" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="1.021" />
    <testcase classname="tests_015.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="1.020" />
    <testcase classname="tests_015.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="8.097" />
    <testcase classname="tests_015.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.594" />
    <testcase classname="tests_015.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.481" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="7.009" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.526" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.931" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_init" time="7.550" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_activate" time="31.934" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_migration" time="33.734" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_new_proto" time="47.176" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_new_proto_second" time="1.629" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_terminate_node0" time="85.612" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_export_snapshots" time="0.994" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_import_full_snapshot_node1" time="7.090" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_import_rolling_snapshot_node2" time="8.066" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_reconstruct_full_node3" time="13.879" />
    <testcase classname="tests_015.test_migration.TestMigration" name="test_rerun_node0" time="5.425" />
    <testcase classname="tests_015.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="11.979" />
    <testcase classname="tests_015.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.066" />
    <testcase classname="tests_015.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.933" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.500" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.499" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="0.999" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="0.999" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="0.997" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="0.999" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="7.958" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.568" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.473" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.498" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.512" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.512" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.516" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.933" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="14.604" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.504" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.499" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.506" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.506" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.076" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.056" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="5.631" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.151" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.504" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.509" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.082" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.513" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="4.577" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="4.580" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="6.606" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="6.599" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="6.619" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.508" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.506" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.512" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.508" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.062" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.058" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="5.609" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.186" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.507" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.505" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.097" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.510" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="4.589" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="4.622" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="6.661" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="6.533" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.554" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.507" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.507" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.504" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.512" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.083" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.517" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="5.614" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.563" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.522" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.507" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.007" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.503" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="4.568" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="4.545" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="6.484" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="6.526" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.557" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.505" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.502" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.511" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.501" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.053" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.508" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="5.584" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.542" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.496" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.499" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.010" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.502" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="4.523" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="4.501" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="6.483" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="6.881" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="29.760" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_014" time="2.956" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="130.008" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.415" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="4.565" />
    <testcase classname="tests_015.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.480" />
    <testcase classname="tests_015.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.477" />
    <testcase classname="tests_015.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.436" />
    <testcase classname="tests_015.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.482" />
    <testcase classname="tests_015.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="9.505" />
    <testcase classname="tests_015.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="14.841" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_init" time="17.782" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_level1" time="1.480" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_running_prevalidators" time="1.480" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_mempool_empty" time="5.528" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_transfer" time="0.509" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.507" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_bake_for1" time="0.533" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_level2" time="1.476" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.510" />
    <testcase classname="tests_015.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.812" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="13.295" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="2.084" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="2.075" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="2.058" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="2.069" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="2.096" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.501" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.510" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.501" />
    <testcase classname="tests_015.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.933" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.513" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.518" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.515" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.504" />
    <testcase classname="tests_014.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="9.933" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="9.585" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="4.677" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="5.725" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.227" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="7.958" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="4.774" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="7.463" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.366" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="12.208" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.400" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="14.748" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="6.951" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="5.208" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="3.095" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="4.097" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="4.501" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="29.506" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.204" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.557" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.316" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.021" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="32.316" />
    <testcase classname="tests_015.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.518" />
    <testcase classname="tests_015.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.515" />
    <testcase classname="tests_015.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.003" />
    <testcase classname="tests_015.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.464" />
    <testcase classname="tests_015.test_contract_macros.TestBigmap" name="test_bigmap" time="17.606" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="18.814" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="12.141" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.031" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="18.350" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.346" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="4.119" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.522" />
    <testcase classname="tests_015.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.744" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="13.437" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="1.062" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.522" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.578" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.526" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.522" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.526" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.843" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.525" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.537" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.529" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.530" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.526" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.729" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.386" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.536" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.533" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.676" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.654" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.531" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.522" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.163" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.534" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.527" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.641" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.527" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.526" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.162" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.545" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.531" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.538" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.534" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.536" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.527" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.527" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="9.390" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="7.241" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.775" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.536" />
    <testcase classname="tests_015.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="0.962" />
    <testcase classname="tests_014.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.495" />
    <testcase classname="tests_014.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.487" />
    <testcase classname="tests_014.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.004" />
    <testcase classname="tests_014.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.331" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="7.739" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="7.818" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.620" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="3.561" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="7.832" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="3.062" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="3.054" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.021" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="4.500" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="5.018" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="1.040" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.499" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.497" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.497" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.498" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.494" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="1.030" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="4.042" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="4.065" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="5.050" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.554" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="1.994" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="11.895" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="58.305" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.328" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.461" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="8.900" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.074" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="6.659" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.039" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.616" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.072" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="46.624" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.477" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.418" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.484" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="2.833" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="2.860" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="29.288" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.358" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="4.571" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="8.613" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.857" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.857" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.734" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.860" />
    <testcase classname="tests_015.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.399" />
    <testcase classname="tests_015.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="7.050" />
    <testcase classname="tests_015.test_contract_macros.TestGuestBook" name="test_guestbook" time="10.522" />
    <testcase classname="tests_015.test_many_bakers.TestManyBakers" name="test_init" time="57.463" />
    <testcase classname="tests_015.test_many_bakers.TestManyBakers" name="test_wait" time="30.029" />
    <testcase classname="tests_015.test_many_bakers.TestManyBakers" name="test_progress" time="5.109" />
    <testcase classname="tests_015.test_many_bakers.TestManyBakers" name="test_check_logs" time="4.487" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="11.912" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="5.742" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="5.774" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.756" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.782" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.769" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="5.778" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="5.766" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="5.796" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="6.215" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="8.729" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.859" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.864" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.745" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.868" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.403" />
    <testcase classname="tests_014.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="7.114" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="6.696" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="0.486" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.483" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.488" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.483" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.493" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.486" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.486" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="0.483" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.902" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.501" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.500" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.498" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.500" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.502" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.500" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.501" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.503" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.501" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.501" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="0.983" />
    <testcase classname="tests_014.test_mockup" name="test_transfer_bad_base_dir" time="1.003" />
    <testcase classname="tests_014.test_mockup" name="test_config_show_mockup" time="0.985" />
    <testcase classname="tests_014.test_mockup" name="test_config_show_mockup_fail" time="1.009" />
    <testcase classname="tests_014.test_mockup" name="test_config_init_mockup" time="0.993" />
    <testcase classname="tests_014.test_mockup" name="test_config_init_mockup_fail" time="0.995" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-None]" time="1.988" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.974" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="1.979" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.980" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-None]" time="1.979" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.994" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="1.982" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.963" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-None]" time="1.990" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.968" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="1.980" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.965" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-None]" time="1.972" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.974" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="1.997" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.972" />
    <testcase classname="tests_014.test_mockup" name="test_transfer_rpc" time="3.422" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos0]" time="0.991" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos1]" time="0.995" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos0]" time="0.991" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos1]" time="0.989" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos0]" time="0.979" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos1]" time="0.999" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos0]" time="0.986" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos1]" time="0.985" />
    <testcase classname="tests_014.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="23.882" />
    <testcase classname="tests_015.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="7.214" />
    <testcase classname="tests_015.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="0.979" />
    <testcase classname="tests_015.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="0.971" />
    <testcase classname="tests_015.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.586" />
    <testcase classname="tests_015.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="0.897" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_unit" time="7.182" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_options" time="1.950" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_unions" time="2.428" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_pair" time="8.241" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_order_of_pairs" time="0.972" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_chain_id" time="1.947" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_signature" time="2.897" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_key" time="1.454" />
    <testcase classname="tests_015.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="6.246" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="6.707" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.484" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.489" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.482" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.492" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.481" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.484" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.495" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.494" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.489" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.492" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.489" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.488" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.496" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.482" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.484" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.483" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.484" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.494" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.489" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.489" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.488" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.486" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.490" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.493" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.488" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.487" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.490" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.485" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.492" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.484" />
    <testcase classname="tests_015.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="0.908" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_setup" time="7.183" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.015" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.011" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.005" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.013" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.031" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.021" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_transfer" time="1.020" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.026" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.488" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.497" />
    <testcase classname="tests_015.test_liquidity_baking.TestTrades" name="test_tok_storage" time="0.901" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="12.023" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="5.823" />
    <testcase classname="tests_015.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="6.768" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="7.122" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="0.963" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="0.959" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.561" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="0.894" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_unit" time="7.069" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_options" time="1.907" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_unions" time="2.393" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_pair" time="8.095" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_order_of_pairs" time="0.957" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_chain_id" time="1.917" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_signature" time="2.859" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_key" time="1.428" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="6.131" />
    <testcase classname="tests_014.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="14.505" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_init" time="17.381" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_level1" time="1.441" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_running_prevalidators" time="1.427" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempool_empty" time="5.303" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_transfer" time="0.497" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.472" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_bake_for1" time="0.527" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_level2" time="1.429" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.466" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.746" />
    <testcase classname="tests_014.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="14.948" />
    <testcase classname="tests_015.test_client.TestSimulation" name="test_transfer_simulation" time="8.210" />
    <testcase classname="tests_015.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.484" />
    <testcase classname="tests_015.test_client.TestSimulation" name="test_delegate_simulation" time="2.954" />
    <testcase classname="tests_015.test_client.TestSimulation" name="test_delegate_without_simulation" time="0.901" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_replay_originate" time="7.593" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.481" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.481" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="2.411" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="2.962" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="2.944" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.468" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="2.467" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.471" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.483" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.486" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.000" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="1.947" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.486" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.482" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.477" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.473" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.471" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.476" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="3.462" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="1.977" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.480" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.476" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.486" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.480" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.478" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.477" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.476" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="0.895" />
    <testcase classname="tests_015.test_contract_baker.TestOriginationCall" name="test_originate" time="7.639" />
    <testcase classname="tests_015.test_contract_baker.TestOriginationCall" name="test_call" time="1.473" />
    <testcase classname="tests_015.test_contract_baker.TestOriginationCall" name="test_balance" time="0.953" />
    <testcase classname="tests_015.test_contract_baker.TestOriginationCall" name="test_query_storage" time="0.903" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.070" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.004" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.004" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="0.999" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.000" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.013" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.007" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.016" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.011" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.480" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.483" />
    <testcase classname="tests_015.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.907" />
    <testcase classname="tests_015.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[None]" time="12.493" />
    <testcase classname="tests_015.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[None]" time="2.832" />
    <testcase classname="tests_015.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[proxy]" time="12.984" />
    <testcase classname="tests_015.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[proxy]" time="3.295" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_transfer_simulation" time="8.802" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.520" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_delegate_simulation" time="3.181" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_delegate_without_simulation" time="0.941" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_replay_originate" time="8.168" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.521" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.604" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.535" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="2.599" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="3.185" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="3.194" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.606" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="2.685" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.594" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.518" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.522" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.089" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="2.131" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.524" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.523" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.595" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.510" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.585" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.512" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.616" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.516" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="3.726" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="2.127" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.517" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.511" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.510" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.518" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.516" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.510" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.510" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="0.931" />
    <testcase classname="tests_014.test_contract_macros.TestBigmap" name="test_bigmap" time="17.509" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="18.715" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="12.138" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.030" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="18.162" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.346" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="4.091" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.514" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.744" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="12.252" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.090" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.942" />
    <testcase classname="tests_015.test_binaries.TestBinaries" name="test_version" time="3.784" />
    <testcase classname="tests_015.test_contract.TestNonRegression" name="test_issue_242_originate" time="8.041" />
    <testcase classname="tests_015.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.506" />
    <testcase classname="tests_015.test_contract.TestNonRegression" name="test_issue_843" time="4.652" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="7.051" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.510" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.514" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.517" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.521" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.520" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.517" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.517" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.515" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.518" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.519" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.513" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.520" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.513" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.519" />
    <testcase classname="tests_015.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.930" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_init" time="18.274" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_level" time="1.522" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_bake_node_0" time="0.711" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_endorse_node_0" time="3.114" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_bake_node_0_again" time="0.542" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_first_branch" time="44.904" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_restart_node_2" time="1.513" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_bake_node_2" time="0.542" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_bake_node_2_again" time="0.540" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_second_branch" time="44.389" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_restart_all" time="3.008" />
    <testcase classname="tests_015.test_fork.TestFork" name="test_check_head" time="92.633" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.504" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.503" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.508" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.503" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.501" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.508" />
    <testcase classname="tests_015.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="0.933" />
    <testcase classname="tests_014.test_binaries.TestBinaries" name="test_version" time="3.047" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_242_originate" time="7.713" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.490" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_843" time="4.366" />
    <testcase classname="tests_014.test_contract_macros.TestGuestBook" name="test_guestbook" time="10.577" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_init" time="58.122" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_wait" time="30.029" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_progress" time="5.359" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_check_logs" time="4.370">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="13.102" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="2.012" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="2.008" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="2.023" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="2.022" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="2.044" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.492" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.490" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.494" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.912" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="6.665" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.485" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.484" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.479" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.482" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.479" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="1.960" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_small" time="1.027" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.331" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.551" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="1.973" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="2.946" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.102" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="1.882" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.642" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.726" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.784" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.632" />
    <testcase classname="tests_015.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.315" />
    <testcase classname="tests_015.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="8.232" />
    <testcase classname="tests_015.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.436" />
    <testcase classname="tests_015.test_contract.TestSendTicketsInBigMap" name="test_receive_tickets_in_big_map_originate" time="7.669" />
    <testcase classname="tests_015.test_contract.TestSendTicketsInBigMap" name="test_send_tickets_in_big_map_originate" time="1.497" />
    <testcase classname="tests_015.test_contract.TestSendTicketsInBigMap" name="test_send_tickets_in_big_map" time="1.469" />
    <testcase classname="tests_015.test_forge_block.TestForgeBlock" name="test_setup_network" time="5.714" />
    <testcase classname="tests_015.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.659" />
    <testcase classname="tests_015.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.481" />
    <testcase classname="tests_015.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="0.909">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.135" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.473" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.482" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.483" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.481" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.494" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.481" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.485" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.436" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.479" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.480" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.482" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.473" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.480" />
    <testcase classname="tests_015.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.370" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_add_initial_nodes" time="28.134" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_activate_proto_a" time="0.528" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_client_knows_proto_b" time="0.478" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_proposal_period" time="2.386" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_submit_proto_b_proposal" time="1.486" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_check_proto_b_proposed" time="5.221" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_wait_for_exploration_period" time="15.464" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_delegates_vote_proto_b" time="2.901" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_wait_for_cooldown" time="14.015" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_wait_for_promotion_period" time="14.070" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_vote_in_promotion_phase" time="0.969" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_wait_for_adoption" time="12.030" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_all_nodes_run_proto_b" time="125.021" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_new_chain_progress" time="1.472" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_submit_again" time="1.479" />
    <testcase classname="tests_015.test_voting_full.TestVotingFull" name="test_check_logs" time="2.104" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="6.967" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.533" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.507" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.529" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.509" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.512" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="2.101" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_small" time="1.097" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.376" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.630" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="2.101" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="2.938" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.008" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="2.009" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.691" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.772" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.875" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.715" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.356" />
    <testcase classname="tests_014.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="8.619" />
    <testcase classname="tests_014.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.594" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="7.016" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.523" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.517" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.518" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.521" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.520" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.512" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.523" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.519" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.518" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.517" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.511" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.511" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.512" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.512" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.518" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.518" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.515" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.512" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.517" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.513" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.517" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.514" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.516" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="0.932" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_setup" time="7.549" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.090" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.074" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.065" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.093" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.083" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.080" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_transfer" time="1.082" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.079" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.510" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.516" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_tok_storage" time="0.933" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="13.182" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="1.037" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.528" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.552" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.514" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.515" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.515" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.825" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.516" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.524" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.514" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.518" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.515" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.708" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.347" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.524" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.520" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.583" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.600" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.527" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.522" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.212" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.531" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.520" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.626" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.523" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.522" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.191" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.528" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.521" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.525" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.530" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.526" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.531" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.525" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="9.337" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="7.204" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.803" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.527" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="0.947" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_delegates" time="7.028" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_no_service_1" time="0.519" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_no_service_2" time="0.514" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_no_service_3" time="0.510" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_bake" time="0.541" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.510" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.512" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.513" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.527" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.510" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.514" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.511" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.528" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="11.472" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.213" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.224" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.234" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_gen_keys" time="1.538" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfers" time="3.225" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_balances" time="1.543" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfer_bar_foo" time="2.139" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_balances_bar_foo" time="1.021" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.135" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_balances_foo_bar" time="1.020" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfer_failure" time="0.527" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_originate_contract_noop" time="2.091" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.070" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.225" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="4.186" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_activate_accounts" time="3.183" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.067" />
    <testcase classname="tests_015.test_basic.TestRawContext" name="test_duplicate_alias" time="1.438" />
    <testcase classname="tests_015.test_contract.TestChainId" name="test_chain_id_opcode" time="9.128" />
    <testcase classname="tests_015.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="2.128" />
    <testcase classname="tests_015.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="3.016" />
    <testcase classname="tests_015.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_origination" time="8.065" />
    <testcase classname="tests_015.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_first_transfer" time="1.065" />
    <testcase classname="tests_015.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_clear_transfer" time="1.062" />
    <testcase classname="tests_015.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_second_transfer" time="1.072" />
    <testcase classname="tests_015.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_third_transfer" time="1.496" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="11.337" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.516" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.585" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.523" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.605" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.521" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.138" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.186" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="5.823" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="4.813" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.518" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.589" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.520" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.608" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.519" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.129" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.153" />
    <testcase classname="tests_015.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="6.209" />
    <testcase classname="tests_015.test_programs.TestProgramsCommands" name="test_convert_script" time="12.631" />
    <testcase classname="tests_015.test_programs.TestProgramsCommands" name="test_convert_data" time="12.672" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_current_period" time="7.541" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_succ_period" time="0.517" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_level_info_offset" time="1.534" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_two_blocks" time="2.152" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="1.057" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.514" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_inject_proto1" time="3.435" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_known_protocol" time="0.503" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.505" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.513" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.050" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_submit_proposals" time="2.096" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_one_block" time="1.064" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.516" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.058" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.520" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.146" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.518" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_current_proposal" time="0.516" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.062" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_submit_ballot" time="1.562" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.122" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.518" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.545" />
    <testcase classname="tests_015.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.698" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_delegates" time="6.617" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_1" time="0.478" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_2" time="0.479" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_3" time="0.481" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_bake" time="0.514" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.477" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.476" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.474" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.478" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.477" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.484" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.477" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.484" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="6.371" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.035" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.007" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.006" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_gen_keys" time="1.430" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfers" time="2.981" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances" time="1.437" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_bar_foo" time="1.983" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances_bar_foo" time="0.961" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.005" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances_foo_bar" time="0.953" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_failure" time="0.487" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_originate_contract_noop" time="1.959" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.001" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.010" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="3.912" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_activate_accounts" time="2.967" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.002" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_duplicate_alias" time="1.380" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_opcode" time="8.614" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="1.993" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="2.836" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_originate" time="7.630" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_call" time="1.475" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_balance" time="0.955" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_query_storage" time="0.899" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.090" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.022" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.005" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="1.003" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.000" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.010" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.006" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.007" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.010" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.477" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.479" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.896" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="11.919" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="5.770" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="5.752" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.768" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.770" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.781" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="5.774" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="5.781" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="5.785" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="6.200" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="6.136" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="9.022" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.002" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.579" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="9.375" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="42.440" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.019" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_write_contract" time="0.003" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_originate_first_explosion" time="7.083" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_originate_big_type" time="0.482" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.623" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.502" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.479" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.484" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.482" />
    <testcase classname="tests_015.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="0.898" />
    <testcase classname="tests_015.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_origination" time="7.600" />
    <testcase classname="tests_015.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_transfer" time="1.416" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="9.237" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.486" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.486" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.482" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="3.480" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.491" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.498" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="2.999" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.481" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.482" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.481" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.492" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.475" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.489" />
    <testcase classname="tests_015.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.385" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_init" time="13.905" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_no_peers" time="2.531" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_add_peers" time="2.388" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_check_clique" time="2.408" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_check_tables" time="4.853" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="4.872" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_expected_peers" time="4.845" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="4.892" />
    <testcase classname="tests_015.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="7.011" />
    <testcase classname="tests_015.test_tls.TestTLS" name="test_bootstrapped" time="0.009">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_015/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="6.158" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="8.888" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.002" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.584" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="4.956" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="28.191" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.157" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_write_contract" time="0.003" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_first_explosion" time="7.103" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_big_type" time="0.485" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.623" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.512" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.488" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.484" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.486" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="0.904" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="6.600" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.474" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.476" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.477" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.482" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.475" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.473" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.479" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.473" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.476" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.475" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.477" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.475" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.475" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.479" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.897" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_init" time="17.366" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_level" time="1.433" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_0" time="0.520" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_endorse_node_0" time="2.865" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_0_again" time="0.508" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_first_branch" time="27.827" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_restart_node_2" time="1.476" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_2" time="0.507" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_2_again" time="0.502" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_second_branch" time="27.791" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_restart_all" time="2.954" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_check_head" time="57.673" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="12.199" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="5.916" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="6.860" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="51.468" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.195" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.137" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.096" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.503" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="4.591" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="53.551" />
    <testcase classname="tests_015.test_contract.TestView" name="test_deploy_view_lib" time="8.410" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.016" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.040" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.123" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="2.979" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="2.933" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.130" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="2.913" />
    <testcase classname="tests_015.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="2.914" />
    <testcase classname="tests_015.test_contract.TestView" name="test_create_contract" time="5.842" />
    <testcase classname="tests_015.test_contract.TestView" name="test_step_constants" time="2.905" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self[self_after_view]" time="3.413" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.429" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.420" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.414" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.418" />
    <testcase classname="tests_015.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.425" />
    <testcase classname="tests_015.test_contract.TestView" name="test_sender[sender_after_view]" time="3.428" />
    <testcase classname="tests_015.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.414" />
    <testcase classname="tests_015.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.430" />
    <testcase classname="tests_015.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.416" />
    <testcase classname="tests_015.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.419" />
    <testcase classname="tests_015.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.444" />
    <testcase classname="tests_015.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.431" />
    <testcase classname="tests_015.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.447" />
    <testcase classname="tests_015.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.422" />
    <testcase classname="tests_015.test_contract.TestView" name="test_recursion" time="2.444" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.477" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.480" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.481" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.483" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.481" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.475" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.476" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.484" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.481" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.479" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.478" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.477" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.480" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.482" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.477" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.476" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.484" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.474" />
    <testcase classname="tests_015.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.894" />
    <testcase classname="tests_015.test_contract.TestContractTypeChecking" name="test_implicit" time="17.302" />
    <testcase classname="tests_015.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="11.250" />
    <testcase classname="tests_015.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="12.727" />
    <testcase classname="tests_015.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="13.122" />
    <testcase classname="tests_015.test_cors.TestCors" name="test_preflight" time="5.568" />
    <testcase classname="tests_015.test_cors.TestCors" name="test_request" time="0.423" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="29.032" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="18.527" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="50.412" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_015.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.086" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="28.746" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="2.713" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_015" time="2.670" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="121.500" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.343" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="4.556" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="37.818" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.240" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.219" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.222" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.678" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="4.692" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="39.690" />
    <testcase classname="tests_014.test_contract.TestView" name="test_deploy_view_lib" time="8.872" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.255" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.251" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.391" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="3.282" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="3.262" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.242" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="3.257" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="3.251" />
    <testcase classname="tests_014.test_contract.TestView" name="test_create_contract" time="6.540" />
    <testcase classname="tests_014.test_contract.TestView" name="test_step_constants" time="3.241" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_view]" time="3.863" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.806" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.810" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.818" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.846" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.853" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_view]" time="3.886" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.916" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.951" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.908" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.924" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.914" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.935" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.927" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.906" />
    <testcase classname="tests_014.test_contract.TestView" name="test_recursion" time="2.797" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.537" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.535" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.535" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.533" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.957" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_implicit" time="19.406" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="12.853" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="14.494" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="14.918" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_setup_network" time="6.220" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.564" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.543" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="1.014">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.789" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.537" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.540" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.538" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.539" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.614" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="1.011" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="9.517" />
    <testcase classname="tests_015.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.645" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="7.337" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="0.546" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="0.543" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.555" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.546" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.538" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.543" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.543" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.543" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.545" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.537" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.557" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat\\s+is not compatible with type list operation]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.537" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.535" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.545" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.543" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.540" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.571" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.553" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.549" />
    <testcase classname="tests_015.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="1.018" />
    <testcase classname="tests_015.test_contract.TestTZIP4View" name="test_run_view" time="10.610" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="7.322" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[emit.tz-Unit-Unit-Unit]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.554" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.567" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.544" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.555" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.556" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.544" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.544" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.544" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.542" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.540" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.551" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.545" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.518" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.520" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.549" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.537" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.539" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.553" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.543" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.558" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.550" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.520" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.544" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.516" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.513" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.512" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.605" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.607" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.520" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.518" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.536" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.548" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.516" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.520" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.538" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.518" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.520" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.517" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.516" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.516" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.514" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.514" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.513" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.517" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.533" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.549" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.541" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.524" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.546" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.535" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.534" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.521" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.523" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.517" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.513" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.513" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.509" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.515" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.509" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.511" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.519" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.517" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.529" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="1.040" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="1.061" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.598" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.527" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.530" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.532" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.522" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.528" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.531" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.10/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.525" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.526" />
    <testcase classname="tests_015.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.964" />
    <testcase classname="tests_015.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.690" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="31.380" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_015" time="3.165" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="121.821" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.506" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.531" />
    <testcase classname="tests_015.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="4.940" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="9.193" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.498" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="7.050" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="0.522" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.517" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.521" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.515" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.518" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.510" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.514" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.517" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.522" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.521" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.521" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.511" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.511" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.518" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat\\s+is not compatible with type list operation]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.515" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.519" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.515" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.515" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.517" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.515" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.520" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.518" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="0.939" />
    <testcase classname="tests_014.test_contract.TestTZIP4View" name="test_run_view" time="10.147" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="11.434" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.520" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.612" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.524" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.609" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.521" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.166" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.182" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="5.845" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="4.831" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.522" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.587" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.518" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.636" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.522" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.145" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.167" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="6.248" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.460" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.516" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.512" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.515" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.513" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.517" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.510" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.511" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.527" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.519" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.516" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.514" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.506" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.505" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.428" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="33.850" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="3.249" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="187.952" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="5.098" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.509" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="5.116" />
    <testcase classname="tests_015.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.721" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="6.968" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="0.544" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.636" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.503" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.527" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.531" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.524" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.772" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.531" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.588" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.527" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.525" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.523" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.522" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.553" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.525" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.561" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.539" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.805" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.526" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/emit.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.529" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.533" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.503" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.503" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.503" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.503" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.502" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.522" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.505" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.506" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.517" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.501" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.504" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.507" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.508" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.545" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.526" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.541" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.528" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.527" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.509" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.649" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.525" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.788" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.531" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.522" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/send_tickets_in_big_map.tz]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.516" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.534" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.514" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/add_clear_tickets.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.537" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.513" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.542" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.528" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.528" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/receive_tickets_in_big_map.tz]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.527" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.528" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.524" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.524" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.526" />
    <testcase classname="tests_015.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="1.007" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="7.119" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.519" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.518" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="1.039" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.520" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.525" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.515" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.512" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.521" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.511" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.510" />
    <testcase classname="tests_015.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="0.929" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="13.948" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="14.791" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.518" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.535" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.117" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.104" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="5.736" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.280" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.519" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.175" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="4.659" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="4.650" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="6.692" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="6.724" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="6.733" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.517" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.513" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.533" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.072" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.091" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="5.703" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.244" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.515" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.516" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.122" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.513" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="4.629" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="4.621" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="6.638" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="6.676" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.595" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.514" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.514" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.521" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.514" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.096" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.517" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="5.694" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.577" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.513" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.512" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.013" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.517" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="4.629" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="4.626" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="6.628" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="6.646" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.576" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.508" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.511" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.522" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.512" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.104" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.511" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="5.730" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.593" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.510" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.512" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.019" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.509" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="4.621" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="4.613" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="6.656" />
    <testcase classname="tests_015.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="7.069" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="29.664" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.204" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.564" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.318" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.021" />
    <testcase classname="tests_015.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="31.530" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="32.146" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="2.903" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="188.865" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="4.707" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.475" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="4.716" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.272" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="6.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="0.493" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.503" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.588" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.511" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.500" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.746" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.513" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.483" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.708" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.467" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/emit.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.470" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.469" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.468" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.467" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.467" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.488" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.492" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.489" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.471" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.492" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.494" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.485" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.481" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.487" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.480" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/add_clear_tickets.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.499" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.482" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.490" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.479" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.512" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.735" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.609" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.491" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.503" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.488" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.488" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="0.484" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.907" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="6.579" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="0.955" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.474" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.473" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.472" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.475" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.482" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.476" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.477" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.478" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="0.895" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="9.166" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.478" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.481" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.480" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="3.499" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.483" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.471" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="2.990" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.475" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.477" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.475" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.463" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.463" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.468" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.358" />
    <testcase classname="tests_014.test_programs.TestProgramsCommands" name="test_convert_script" time="11.759" />
    <testcase classname="tests_014.test_programs.TestProgramsCommands" name="test_convert_data" time="11.784" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_init" time="13.375" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_level" time="0.964" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_bake_node_0" time="1.009" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_endorse_node_0" time="3.463" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_restart_node_1" time="1.486" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_start_accuser" time="2.104" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_bake_node_1" time="0.510" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_endorse_node_2" time="46.210" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_restart_node_0" time="1.481" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_check_level" time="0.963" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_bake_block" time="0.527" />
    <testcase classname="tests_015.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.914">
      <skipped type="pytest.xfail" message="Works locally - CI fails" />
    </testcase>
    <testcase classname="tests_015.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="29.617" />
    <testcase classname="tests_015.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="15.419" />
    <testcase classname="tests_015.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="19.475" />
    <testcase classname="tests_015.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="5.886" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="6.598" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.477" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.479" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="0.946" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.478" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.476" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.479" />
    <testcase classname="tests_015.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.896" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.130" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.487" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.483" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.488" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.900" />
    <testcase classname="tests_015.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="6.632" />
    <testcase classname="tests_015.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="4.911" />
    <testcase classname="tests_015.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="2.894" />
    <testcase classname="tests_015.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="3.872" />
    <testcase classname="tests_015.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="4.279" />
    <testcase classname="tests_015.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="29.279" />
    <testcase classname="tests_015.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.350" />
    <testcase classname="tests_015.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="4.546" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_init" time="13.984" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_level" time="1.010" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_node_0" time="1.082" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_endorse_node_0" time="3.567" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_restart_node_1" time="1.504" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_start_accuser" time="2.104" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_node_1" time="0.537" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_endorse_node_2" time="33.278" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_restart_node_0" time="1.508" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_check_level" time="1.010" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_block" time="0.545" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.460" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="31.153" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="16.346" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="20.623" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="6.280" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="6.960" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.504" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.512" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="1.009" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.503" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.508" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.508" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.918" />
    <testcase classname="tests_014.test_cors.TestCors" name="test_preflight" time="5.927" />
    <testcase classname="tests_014.test_cors.TestCors" name="test_request" time="0.423" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_init" time="14.477" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_no_peers" time="2.699" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_add_peers" time="2.532" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_clique" time="2.538" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_tables" time="5.073" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="5.100" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_expected_peers" time="5.085" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="5.095" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="7.396" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_current_period" time="7.440" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_succ_period" time="0.503" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_level_info_offset" time="1.508" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_two_blocks" time="2.079" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="1.051" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.504" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_inject_proto1" time="3.323" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_known_protocol" time="0.501" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.506" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.506" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.039" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_proposals" time="2.056" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_one_block" time="1.063" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.505" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.039" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.515" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.098" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.501" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_current_proposal" time="0.506" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.041" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_ballot" time="1.543" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.090" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.514" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.515" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.547" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_manager_origination" time="9.569" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_delegatable_origination" time="1.574" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.595" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.564" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_target_without_default_origination" time="1.562" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_target_with_root_origination" time="1.562" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_manager_set_delegate" time="6.245" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_manager_withdraw_delegate" time="3.121" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_to_manager" time="3.071" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="3.079" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="4.071" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.115" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.064" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="4.251" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.123" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.130" />
    <testcase classname="tests_015.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.551" />
    <testcase classname="tests_015.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="9.398" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="9.550" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="4.725" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="5.753" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.195" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="7.853" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="4.711" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="7.387" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.312" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="11.030" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.348" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="14.687" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="12.372" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="77.089" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.416" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.481" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="9.241" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.080" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="6.993" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.040" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.744" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.083" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="49.127" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.498" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.475" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.507" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="2.988" />
    <testcase classname="tests_015.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="3.069" />
    <testcase classname="tests_015.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="24.730" />
    <testcase classname="examples.test_example.TestExample" name="test_wait_sync_proto" time="13.492" />
    <testcase classname="examples.test_example.TestExample" name="test_transfer" time="0.488" />
    <testcase classname="examples.test_example.TestExample" name="test_inclusion" time="0.711" />
    <testcase classname="examples.test_example.TestExample" name="test_inclusion_check_previous" time="1.317" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_origination" time="9.100" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_delegatable_origination" time="1.482" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.493" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.476" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_without_default_origination" time="1.483" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_with_root_origination" time="1.480" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_set_delegate" time="5.913" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_withdraw_delegate" time="2.942" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_to_manager" time="2.897" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="2.899" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="3.865" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.000" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.009" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="3.997" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.003" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.008" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.427" />
    <testcase classname="tests_014.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="8.977" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="6.577" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.487" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[emit.tz-Unit-Unit-Unit]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.482" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.492" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.490" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.484" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.483" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.487" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.483" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.488" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.484" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.481" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.504" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.484" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.482" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.482" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.489" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.488" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.499" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.492" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.484" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.481" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.536" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.481" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.490" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.492" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.507" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.503" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.483" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.479" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.485" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.557" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.553" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.480" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.482" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.477" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.478" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.466" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.466" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.482" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.466" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.466" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.466" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.475" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.473" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.474" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.476" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="0.948" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="0.947" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.402" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.469" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.467" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.472" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.470" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.10/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.471" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.468" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.906" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="28.638" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="18.557" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="36.386" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.137" />
    <testcase classname="tests_014.test_tls.TestTLS" name="test_bootstrapped" time="0.000">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_014/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_015.test_client_without_node.TestConfigValid" name="test_config_node_port" time="1.929" />
    <testcase classname="tests_015.test_client_without_node.TestConfigValid" name="test_config_web_port" time="1.924" />
    <testcase classname="tests_015.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="7.219" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="7.141" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="7.431" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.479" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="3.443" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="7.371" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="2.935" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="2.947" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.001" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="4.375" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="4.856" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="0.989" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.474" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.480" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.479" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.483" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.478" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.983" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="3.886" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="3.914" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="4.883" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.507" />
    <testcase classname="tests_015.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="1.921" />
    <testcase classname="tests_015.test_mockup" name="test_list_mockup_protocols" time="0.474" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_dir_exists_nonempty" time="0.473" />
    <testcase classname="tests_015.test_mockup" name="test_retrieve_addresses" time="0.965" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_already_initialized" time="0.975" />
    <testcase classname="tests_015.test_mockup" name="test_transfer" time="2.878" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.489" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.492" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.487" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.487" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.490" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.488" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.491" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.491" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.487" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.489" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="0.953" />
    <testcase classname="tests_015.test_mockup" name="test_transfer_bad_base_dir" time="0.969" />
    <testcase classname="tests_015.test_mockup" name="test_config_show_mockup" time="0.964" />
    <testcase classname="tests_015.test_mockup" name="test_config_show_mockup_fail" time="0.968" />
    <testcase classname="tests_015.test_mockup" name="test_config_init_mockup" time="0.962" />
    <testcase classname="tests_015.test_mockup" name="test_config_init_mockup_fail" time="0.960" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-None]" time="1.933" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.931" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-None]" time="3.372" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.340" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-None]" time="1.916" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.904" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-None]" time="3.356" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.359" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-None]" time="1.933" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.918" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-None]" time="3.381" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.362" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-None]" time="1.939" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.912" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-None]" time="3.351" />
    <testcase classname="tests_015.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.341" />
    <testcase classname="tests_015.test_mockup" name="test_transfer_rpc" time="3.347" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos0]" time="0.971" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos1]" time="0.955" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos2]" time="0.962" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos3]" time="0.952" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos4]" time="0.958" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command0-protos5]" time="0.959" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos0]" time="0.960" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos1]" time="0.956" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos2]" time="0.962" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos3]" time="0.953" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos4]" time="0.965" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command1-protos5]" time="0.962" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos0]" time="0.956" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos1]" time="0.956" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos2]" time="0.957" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos3]" time="0.957" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos4]" time="0.957" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command2-protos5]" time="0.968" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos0]" time="0.955" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos1]" time="0.959" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos2]" time="0.955" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos3]" time="0.952" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos4]" time="0.948" />
    <testcase classname="tests_015.test_mockup" name="test_proto_mix[command3-protos5]" time="0.964" />
    <testcase classname="tests_015.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="14.658" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="7.834" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.539" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.452" />
    <testcase classname="tests_alpha.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="14.863" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="9.407" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.492" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.495" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.495" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="3.599" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.546" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.558" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="3.085" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.497" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.496" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.495" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.550" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.547" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.558" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.424" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="12.170" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="5.897" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="5.889" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.907" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.875" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="5.889" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="5.855" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="5.854" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="5.827" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="6.252" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="12.614" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="0.988" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.489" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.451" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.482" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.484" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.490" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.612" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.488" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.503" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.493" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.493" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.488" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.607" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.116" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.496" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.494" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.337" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.364" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.490" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.518" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.079" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.498" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.491" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.336" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.492" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.497" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.084" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.497" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.497" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.495" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.495" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.497" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.496" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.496" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="8.752" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="6.807" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.388" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.501" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="0.911" />
    <testcase classname="tests_alpha.test_tls.TestTLS" name="test_bootstrapped" time="0.007">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_alpha/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_alpha.test_binaries.TestBinaries" name="test_version" time="3.073" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="29.893" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="15.712" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="19.923" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="5.992" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_originate" time="7.720" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_call" time="1.497" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_balance" time="0.970" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_query_storage" time="0.908" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="7.215" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="7.706" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.521" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="3.525" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="7.554" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="3.017" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="3.011" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.021" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="4.463" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="4.977" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="1.026" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.498" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.495" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.492" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.497" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.511" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="1.021" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="4.023" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="4.018" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="5.040" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.538" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="1.965" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_init" time="17.465" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_level1" time="1.429" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_running_prevalidators" time="1.438" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempool_empty" time="5.353" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_transfer" time="0.489" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.466" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_bake_for1" time="0.511" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_level2" time="1.426" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.457" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.746" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="14.954" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_init" time="13.667" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_level" time="1.002" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_node_0" time="1.255" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_endorse_node_0" time="3.515" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_restart_node_1" time="1.488" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_start_accuser" time="2.102" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_node_1" time="0.543" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_endorse_node_2" time="44.619" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_restart_node_0" time="1.478" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_check_level" time="0.953" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_block" time="0.516" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.329" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_unit" time="7.056" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_options" time="1.912" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_unions" time="2.386" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_pair" time="8.052" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_order_of_pairs" time="0.954" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_chain_id" time="1.896" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_signature" time="2.843" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_key" time="1.428" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="6.112" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="6.615" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.477" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.474" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.480" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.480" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.481" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.479" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.476" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.474" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.476" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.476" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.477" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.478" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.477" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.470" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.894" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.102" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.481" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.480" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.478" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.897" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="17.633" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="11.379" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.031" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="17.077" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.345" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="3.808" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.479" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.395" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_delegates" time="6.754" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_1" time="0.494" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_2" time="0.486" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_3" time="0.502" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_bake" time="0.522" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.494" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.488" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.489" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.487" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.487" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.486" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.494" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.489" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="10.921" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.095" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.106" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.203" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_gen_keys" time="1.470" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfers" time="3.081" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances" time="1.471" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_bar_foo" time="2.065" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances_bar_foo" time="0.978" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.047" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances_foo_bar" time="0.979" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_failure" time="0.502" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_originate_contract_noop" time="1.989" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.021" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.092" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="3.995" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_activate_accounts" time="3.048" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.025" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_duplicate_alias" time="1.405" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_opcode" time="8.841" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="2.070" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="2.895" />
    <testcase classname="tests_alpha.test_contract.TestTZIP4View" name="test_run_view" time="9.727" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="9.272" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="4.548" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="5.602" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.096" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="7.625" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="4.611" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="7.180" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.175" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="10.670" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.168" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="14.071" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_current_period" time="7.162" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_succ_period" time="0.483" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_level_info_offset" time="1.456" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_two_blocks" time="1.989" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="0.996" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.483" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_inject_proto1" time="3.219" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_known_protocol" time="0.483" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.488" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.483" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.003" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_proposals" time="1.969" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_one_block" time="1.001" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.485" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.002" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.493" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.023" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.489" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_current_proposal" time="0.486" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.010" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_ballot" time="1.494" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.017" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.500" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.473" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.414" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="6.037" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="8.837" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.002" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.575" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="4.934" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="41.045" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.019" />
    <testcase classname="tests_alpha.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="9.431" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="6.625" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.492" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.493" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.493" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="0.901" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="12.996" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.499" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.498" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.500" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.497" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.498" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.498" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.496" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.495" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.493" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.496" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="0.967" />
    <testcase classname="tests_alpha.test_mockup" name="test_transfer_bad_base_dir" time="0.982" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_show_mockup" time="0.968" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_show_mockup_fail" time="0.976" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_init_mockup" time="0.981" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_init_mockup_fail" time="0.977" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-None]" time="1.953" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.941" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-None]" time="3.419" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.413" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-None]" time="1.959" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.956" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-None]" time="3.438" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.406" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-None]" time="1.953" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.941" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-None]" time="3.418" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.407" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-None]" time="1.964" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_none-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="1.948" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-None]" time="3.422" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-protocol_constants_fixture_from_rpc-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="3.423" />
    <testcase classname="tests_alpha.test_mockup" name="test_transfer_rpc" time="3.382" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos0]" time="0.992" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos1]" time="0.978" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos2]" time="0.976" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos3]" time="0.974" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos4]" time="0.979" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos5]" time="0.976" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos0]" time="0.974" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos1]" time="0.976" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos2]" time="0.983" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos3]" time="0.972" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos4]" time="0.984" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos5]" time="0.979" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos0]" time="0.973" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos1]" time="0.984" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos2]" time="0.971" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos3]" time="0.967" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos4]" time="0.970" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos5]" time="0.973" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos0]" time="0.971" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos1]" time="0.970" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos2]" time="0.972" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos3]" time="0.972" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos4]" time="0.972" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos5]" time="0.984" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="7.030" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="0.948" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="0.947" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.543" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="0.888" />
    <testcase classname="tests_alpha.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.468" />
    <testcase classname="tests_alpha.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.468" />
    <testcase classname="tests_alpha.test_contract_macros.TestBigmap" name="test_bigmap" time="16.234" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="28.919" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="18.542" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="49.264" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.136" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="12.849" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="1.982" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="1.989" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="1.981" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="1.978" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="1.990" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.479" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.477" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.479" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.898" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="28.991" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.351" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="4.566" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.484" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.486" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.445" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_implicit" time="17.774" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="11.587" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="13.050" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="13.449" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_setup" time="7.141" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.009" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.007" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.010" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.003" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.017" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.018" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_transfer" time="1.009" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.016" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.483" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.480" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_tok_storage" time="0.899" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.154" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.481" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.487" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.485" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.480" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.443" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="0.903" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="23.658" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="28.402" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.204" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.530" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.317" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.025" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="29.645" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="6.850" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.498" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.498" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.496" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.497" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.499" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="2.047" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_small" time="1.072" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.343" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.656" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="2.046" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="3.027" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.177" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="1.938" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.675" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.748" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.806" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.660" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.329" />
    <testcase classname="tests_alpha.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="8.404" />
    <testcase classname="tests_alpha.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.486" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="6.842" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="0.998" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.496" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.494" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="0.910" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="11.059" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.508" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.538" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.498" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.548" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.511" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.067" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.074" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="5.630" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="4.636" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.530" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.551" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.509" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.538" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.505" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.034" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.012" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="6.075" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_init" time="58.994" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_wait" time="30.030" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_progress" time="5.563" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_check_logs" time="4.440" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="50.921" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.207" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.188" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.189" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.596" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="4.620" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="52.482" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.514" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.505" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="0.999" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="1.011" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="1.009" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="0.998" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_origination" time="9.550" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_delegatable_origination" time="1.556" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.566" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.548" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_without_default_origination" time="1.557" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_with_root_origination" time="1.558" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_set_delegate" time="6.221" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_withdraw_delegate" time="3.102" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_to_manager" time="3.052" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="3.062" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="4.081" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.104" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.062" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="4.236" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.112" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.113" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.538" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="6.903" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.500" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.502" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="0.997" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.500" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.500" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.498" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.916" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.375" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.504" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.505" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.511" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.505" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.503" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.504" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.523" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.511" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.508" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.507" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.508" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.503" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.507" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.432" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="12.440" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="6.048" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="6.952" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_deploy_view_lib" time="8.328" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.005" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.012" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.080" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="3.027" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="3.022" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.031" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="3.030" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="2.982" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_create_contract" time="6.040" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_step_constants" time="3.022" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_view]" time="3.550" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.551" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.569" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.549" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.549" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.533" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_view]" time="3.538" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.541" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.525" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.522" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.545" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_recursion" time="2.508" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.487" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.494" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.496" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.911" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_write_contract" time="0.003" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_first_explosion" time="7.125" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_big_type" time="0.480" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.636" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.512" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.482" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.481" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.479" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="0.900" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_replay_originate" time="7.678" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.484" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.467" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.473" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="2.452" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="2.972" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="2.968" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.480" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="2.492" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.498" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.012" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="1.976" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.484" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.485" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.481" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.493" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.480" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.498" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.480" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="3.532" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="1.999" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.480" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.483" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.479" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.484" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.478" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.478" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.480" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.481" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.479" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.477" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.481" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.482" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="0.899" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="7.139" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="6.627" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="4.994" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="3.051" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="3.953" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="4.314" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="8.526" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.345" />
    <testcase classname="tests_alpha.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="7.006" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_init" time="13.844" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_no_peers" time="2.507" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_add_peers" time="2.388" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_clique" time="2.390" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_tables" time="4.779" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="4.793" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_expected_peers" time="4.763" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="4.776" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="6.849" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="29.037" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_alpha" time="2.929" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="129.219" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.381" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="4.540" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="8.662" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.858" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.858" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.755" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.873" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.415" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="6.702" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.485" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.485" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="0.485" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.499" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.494" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.487" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.494" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.503" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.487" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.494" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat\\s+is not compatible with type list operation]" time="0.499" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.491" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.498" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.487" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.488" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.492" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.489" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.485" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.490" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.493" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.495" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="0.913" />
    <testcase classname="tests_alpha.test_contract_macros.TestGuestBook" name="test_guestbook" time="10.733" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="29.731" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="2.826" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_alpha" time="2.801" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="123.692" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.451" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="4.546" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_transfer_simulation" time="9.010" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.542" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_delegate_simulation" time="3.268" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_delegate_without_simulation" time="0.959" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigValid" name="test_config_node_port" time="2.116" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigValid" name="test_config_web_port" time="2.096" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="7.125" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.548" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.512" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="0.545" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.508" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.511" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="0.514" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.650" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.502" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.510" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.514" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.512" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.511" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.510" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.511" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.560" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.561" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.513" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.510" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.513" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.568" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.512" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/emit.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.776" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.823" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.547" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.513" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.515" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.564" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.516" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.575" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.517" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.549" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.815" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.671" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/receive_tickets_in_big_map.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/send_tickets_in_big_map.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.562" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/add_clear_tickets.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.562" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.549" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.962" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_setup_network" time="6.021" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.527" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.521" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="0.983">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_alpha.test_programs.TestProgramsCommands" name="test_convert_script" time="12.693" />
    <testcase classname="tests_alpha.test_programs.TestProgramsCommands" name="test_convert_data" time="12.895" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_242_originate" time="7.799" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.478" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_843" time="4.315" />
    <testcase classname="tests_alpha.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.003" />
    <testcase classname="tests_alpha.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.026" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="6.602" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.496" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.898" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="11.892" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="72.350" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.331" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.457" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="8.969" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.079" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="6.661" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.039" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.645" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.080" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="47.324" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.470" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.393" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.487" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="2.885" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="2.827" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="9.940" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_init" time="19.167" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_level" time="1.615" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_0" time="0.680" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_endorse_node_0" time="3.350" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_0_again" time="0.566" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_first_branch" time="44.592" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_restart_node_2" time="1.530" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_2" time="0.565" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_2_again" time="0.561" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_second_branch" time="44.411" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_restart_all" time="3.058" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_check_head" time="95.742" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.676" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.110" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.111" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="1.101" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.094" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.103" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.084" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.095" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.095" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.524" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.517" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.933" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="12.156" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.077" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.939" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="6.514" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.471" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[emit.tz-Unit-Unit-Unit]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.472" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.467" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.470" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.471" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.469" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.466" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.470" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.464" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.467" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.464" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.467" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.497" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.467" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.468" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.472" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.471" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.472" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.474" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.474" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.474" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.503" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.474" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.476" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.488" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.495" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.495" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.494" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.504" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.502" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.505" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.493" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.489" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.502" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.500" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.515" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.519" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.489" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.494" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.498" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.487" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.564" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.561" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.488" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.494" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.492" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.475" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.477" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.473" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.478" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.497" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.485" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="0.965" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="0.966" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.444" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.483" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.486" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.480" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.482" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.481" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.10/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.479" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.484" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.911" />
    <testcase classname="tests_alpha.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.050" />
    <testcase classname="tests_alpha.test_cors.TestCors" name="test_preflight" time="6.154" />
    <testcase classname="tests_alpha.test_cors.TestCors" name="test_request" time="0.475" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="15.354" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.534" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.533" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.598" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.543" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.277" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.252" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="5.952" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.472" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.536" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.534" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.347" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.532" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="4.843" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="4.844" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="6.969" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="6.894" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="7.016" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.538" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.532" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.586" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.538" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.216" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.197" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="5.920" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.469" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.535" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.533" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.328" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.523" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="4.808" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="4.803" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="6.923" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="6.894" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.683" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.531" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.532" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.581" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.519" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.171" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.539" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="5.857" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.643" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.535" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.534" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.055" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.531" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="4.751" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="4.759" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="6.872" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="6.913" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.668" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.528" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.522" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.559" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.524" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.151" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.524" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="5.804" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.601" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.516" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.518" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.028" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.524" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="4.750" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="4.749" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="6.776" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="7.199" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_init" time="7.104" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_activate" time="28.958" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_migration" time="32.201" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_new_proto" time="42.881" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_new_proto_second" time="1.542" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_terminate_node0" time="80.779" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_export_snapshots" time="0.924" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_import_full_snapshot_node1" time="6.621" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_import_rolling_snapshot_node2" time="7.588" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_reconstruct_full_node3" time="13.265" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_rerun_node0" time="5.041" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_add_initial_nodes" time="29.901" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_activate_proto_a" time="0.554" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_client_knows_proto_b" time="0.646" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_proposal_period" time="2.581" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_submit_proto_b_proposal" time="1.620" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_check_proto_b_proposed" time="5.658" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_exploration_period" time="16.822" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_delegates_vote_proto_b" time="3.145" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_cooldown" time="15.199" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_promotion_period" time="15.218" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_vote_in_promotion_phase" time="1.057" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_adoption" time="13.026" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_all_nodes_run_proto_b" time="128.806" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_new_chain_progress" time="1.584" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_submit_again" time="1.590" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_check_logs" time="2.348" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="34.209" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="3.231" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="191.135" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.662" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="5.277" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.530" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="5.311" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.740" />
  </testsuite>
</testsuites>