// SPDX-FileCopyrightText: 2023 Marigold <contact@marigold.dev>
//
// SPDX-License-Identifier: MIT

// usage: node benchmarks/bench_loop.js

// create contract and call it
// "loop.sol" example

const utils = require('./utils');
const addr = require('../lib/address');
let faucet = require('./players/faucet.json');
let player1 = require('./players/player1.json');

let create_data = "0x608060405234801561001057600080fd5b506101d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630b7d796e14610030575b600080fd5b61004a600480360381019061004591906100c2565b61004c565b005b60005b81811015610083576001600080828254610069919061011e565b92505081905550808061007b90610152565b91505061004f565b5050565b600080fd5b6000819050919050565b61009f8161008c565b81146100aa57600080fd5b50565b6000813590506100bc81610096565b92915050565b6000602082840312156100d8576100d7610087565b5b60006100e6848285016100ad565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101298261008c565b91506101348361008c565b925082820190508082111561014c5761014b6100ef565b5b92915050565b600061015d8261008c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361018f5761018e6100ef565b5b60018201905091905056fea26469706673582212204d4af522632eaf74d488c8eb8ae5fffa91a1d6f9140ce0e3b43d253eec98ed4664736f6c63430008120033"

// create call data with different values
let call_data_prefix = "0x0b7d796e00000000000000000000000000000000"
let call_data = function (n) {
    return call_data_prefix + utils.encode_number(n)
}

let txs = [];

// initialisation
txs.push(utils.transfer(faucet, player1, 100000000))
let create = utils.create(player1, 0, create_data)
txs.push(create.tx)

let max = 100
// send calls
for (let i = 0; i <= max; i++) {
    txs.push(utils.send(player1, create.addr, 0, call_data(i)))
}


utils.print_bench([txs])
