name: Build and Publish Docker image

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'main'
  create:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        platform: ['linux/amd64', 'linux/arm64']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: t4l3nt/t4l3nt
          tags: |
            type=ref,event=branch
            type=ref,event=branch,suffix=-{{sha}}
            type=ref,event=pr,suffix=-{{sha}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Registry login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Outputs
        run: |
          echo "The name:tag of the Docker Image is: ${{ steps.meta.outputs.tags }}"
          echo "The labels are ${{ steps.meta.outputs.labels }}"

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The latest docker name:tag for this PR is ***${{ steps.meta.outputs.tags }}*** :whale: :ship:'
            })
